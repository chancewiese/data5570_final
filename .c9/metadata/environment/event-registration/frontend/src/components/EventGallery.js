{"filter":false,"title":"EventGallery.js","tooltip":"/event-registration/frontend/src/components/EventGallery.js","undoManager":{"mark":19,"position":19,"stack":[[{"start":{"row":0,"column":0},"end":{"row":260,"column":28},"action":"insert","lines":["import React, { useState } from 'react';","import {","  ImageList,","  ImageListItem,","  IconButton,","  Dialog,","  DialogContent,","  Button,","  Box,","  Typography,","  CircularProgress,","  Alert,","  Tooltip","} from '@mui/material';","import {","  X as CloseIcon,","  ChevronLeft,","  ChevronRight,","  Star,","  Star as StarFilledIcon,","  Trash2,","  Upload","} from 'lucide-react';","import axios from '../utils/axios';","","const EventGallery = ({ event, isAdmin, onImagesChange }) => {","  const [selectedImage, setSelectedImage] = useState(null);","  const [loading, setLoading] = useState(false);","  const [error, setError] = useState(null);","  const [uploadingImages, setUploadingImages] = useState(false);","","  const handleImageClick = (image, index) => {","    setSelectedImage({ ...image, index });","  };","","  const handleClose = () => {","    setSelectedImage(null);","  };","","  const handlePrevious = () => {","    const newIndex = (selectedImage.index - 1 + event.images.length) % event.images.length;","    setSelectedImage({ ...event.images[newIndex], index: newIndex });","  };","","  const handleNext = () => {","    const newIndex = (selectedImage.index + 1) % event.images.length;","    setSelectedImage({ ...event.images[newIndex], index: newIndex });","  };","","  const handleFileSelect = async (e) => {","    const files = Array.from(e.target.files);","    if (files.length === 0) return;","","    setUploadingImages(true);","    setError(null);","","    const formData = new FormData();","    files.forEach(file => {","      formData.append('images', file);","    });","","    try {","      await axios.post(","        `/api/events/${event.url_name}/upload_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to upload images');","    } finally {","      setUploadingImages(false);","    }","  };","","  const handleDeleteImage = async (imageId) => {","    if (!window.confirm('Are you sure you want to delete this image?')) return;","","    setLoading(true);","    setError(null);","","    try {","      await axios.delete(`/api/events/${event.url_name}/delete_image/`, {","        data: { image_id: imageId }","      });","      onImagesChange();","      if (selectedImage?.id === imageId) {","        setSelectedImage(null);","      }","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to delete image');","    } finally {","      setLoading(false);","    }","  };","","  const handleSetPrimary = async (imageId) => {","    setLoading(true);","    setError(null);","","    try {","      await axios.post(`/api/events/${event.url_name}/set_primary_image/`, {","        image_id: imageId","      });","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to set primary image');","    } finally {","      setLoading(false);","    }","  };","","  return (","    <div className=\"w-full\">","      {error && (","        <Alert severity=\"error\" className=\"mb-4\">","          {error}","        </Alert>","      )}","","      {isAdmin && (","        <Box className=\"mb-4\">","          <input","            type=\"file\"","            id=\"image-upload\"","            multiple","            accept=\"image/*\"","            className=\"hidden\"","            onChange={handleFileSelect}","          />","          <label htmlFor=\"image-upload\">","            <Button","              variant=\"contained\"","              component=\"span\"","              disabled={uploadingImages}","              startIcon={<Upload className=\"w-4 h-4\" />}","            >","              {uploadingImages ? 'Uploading...' : 'Upload Images'}","            </Button>","          </label>","        </Box>","      )}","","      {event.images?.length > 0 ? (","        <ImageList cols={3} gap={8} className=\"!grid-cols-1 sm:!grid-cols-2 md:!grid-cols-3\">","          {event.images.map((image, index) => (","            <ImageListItem ","              key={image.id}","              className=\"relative group cursor-pointer overflow-hidden rounded-lg\"","              onClick={() => handleImageClick(image, index)}","            >","              <img","                src={image.image_url}","                alt={image.caption || 'Event image'}","                className=\"w-full h-full object-cover aspect-[4/3] hover:scale-105 transition-transform duration-300\"","              />","              {isAdmin && (","                <Box className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity\">","                  <Tooltip title={image.is_primary ? \"Primary Image\" : \"Set as Primary\"}>","                    <IconButton","                      size=\"small\"","                      onClick={(e) => {","                        e.stopPropagation();","                        handleSetPrimary(image.id);","                      }}","                      className=\"bg-white hover:bg-gray-100 mr-1\"","                    >","                      {image.is_primary ? (","                        <StarFilledIcon className=\"w-4 h-4\" />","                      ) : (","                        <Star className=\"w-4 h-4\" />","                      )}","                    </IconButton>","                  </Tooltip>","                  <Tooltip title=\"Delete Image\">","                    <IconButton","                      size=\"small\"","                      onClick={(e) => {","                        e.stopPropagation();","                        handleDeleteImage(image.id);","                      }}","                      className=\"bg-white hover:bg-gray-100\"","                    >","                      <Trash2 className=\"w-4 h-4\" />","                    </IconButton>","                  </Tooltip>","                </Box>","              )}","              {image.caption && (","                <Box className=\"absolute bottom-0 left-0 right-0 bg-black/50 text-white p-2 opacity-0 group-hover:opacity-100 transition-opacity\">","                  <Typography variant=\"caption\">","                    {image.caption}","                  </Typography>","                </Box>","              )}","            </ImageListItem>","          ))}","        </ImageList>","      ) : (","        <Typography color=\"text.secondary\" className=\"text-center py-8\">","          No images uploaded yet","        </Typography>","      )}","","      <Dialog","        open={!!selectedImage}","        onClose={handleClose}","        maxWidth=\"lg\"","        fullWidth","      >","        <DialogContent className=\"relative p-0\">","          <IconButton","            onClick={handleClose}","            className=\"absolute top-2 right-2 bg-white/80 hover:bg-white z-10\"","          >","            <CloseIcon className=\"w-5 h-5\" />","          </IconButton>","","          {selectedImage && (","            <>","              <img","                src={selectedImage.image_url}","                alt={selectedImage.caption || 'Event image'}","                className=\"w-full h-auto\"","              />","              ","              {selectedImage.caption && (","                <Typography className=\"p-4 text-center\">","                  {selectedImage.caption}","                </Typography>","              )}","","              {event.images.length > 1 && (","                <>","                  <IconButton","                    onClick={handlePrevious}","                    className=\"absolute left-2 top-1/2 -translate-y-1/2 bg-white/80 hover:bg-white\"","                  >","                    <ChevronLeft className=\"w-6 h-6\" />","                  </IconButton>","                  <IconButton","                    onClick={handleNext}","                    className=\"absolute right-2 top-1/2 -translate-y-1/2 bg-white/80 hover:bg-white\"","                  >","                    <ChevronRight className=\"w-6 h-6\" />","                  </IconButton>","                </>","              )}","            </>","          )}","        </DialogContent>","      </Dialog>","    </div>","  );","};","","export default EventGallery;"],"id":1}],[{"start":{"row":0,"column":13},"end":{"row":0,"column":14},"action":"remove","lines":[" "],"id":2},{"start":{"row":0,"column":12},"end":{"row":0,"column":13},"action":"remove","lines":[","]},{"start":{"row":0,"column":11},"end":{"row":0,"column":12},"action":"remove","lines":["t"]},{"start":{"row":0,"column":10},"end":{"row":0,"column":11},"action":"remove","lines":["c"]},{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"remove","lines":["a"]},{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"remove","lines":["e"]},{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"remove","lines":["R"]}],[{"start":{"row":0,"column":0},"end":{"row":260,"column":28},"action":"remove","lines":["import { useState } from 'react';","import {","  ImageList,","  ImageListItem,","  IconButton,","  Dialog,","  DialogContent,","  Button,","  Box,","  Typography,","  CircularProgress,","  Alert,","  Tooltip","} from '@mui/material';","import {","  X as CloseIcon,","  ChevronLeft,","  ChevronRight,","  Star,","  Star as StarFilledIcon,","  Trash2,","  Upload","} from 'lucide-react';","import axios from '../utils/axios';","","const EventGallery = ({ event, isAdmin, onImagesChange }) => {","  const [selectedImage, setSelectedImage] = useState(null);","  const [loading, setLoading] = useState(false);","  const [error, setError] = useState(null);","  const [uploadingImages, setUploadingImages] = useState(false);","","  const handleImageClick = (image, index) => {","    setSelectedImage({ ...image, index });","  };","","  const handleClose = () => {","    setSelectedImage(null);","  };","","  const handlePrevious = () => {","    const newIndex = (selectedImage.index - 1 + event.images.length) % event.images.length;","    setSelectedImage({ ...event.images[newIndex], index: newIndex });","  };","","  const handleNext = () => {","    const newIndex = (selectedImage.index + 1) % event.images.length;","    setSelectedImage({ ...event.images[newIndex], index: newIndex });","  };","","  const handleFileSelect = async (e) => {","    const files = Array.from(e.target.files);","    if (files.length === 0) return;","","    setUploadingImages(true);","    setError(null);","","    const formData = new FormData();","    files.forEach(file => {","      formData.append('images', file);","    });","","    try {","      await axios.post(","        `/api/events/${event.url_name}/upload_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to upload images');","    } finally {","      setUploadingImages(false);","    }","  };","","  const handleDeleteImage = async (imageId) => {","    if (!window.confirm('Are you sure you want to delete this image?')) return;","","    setLoading(true);","    setError(null);","","    try {","      await axios.delete(`/api/events/${event.url_name}/delete_image/`, {","        data: { image_id: imageId }","      });","      onImagesChange();","      if (selectedImage?.id === imageId) {","        setSelectedImage(null);","      }","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to delete image');","    } finally {","      setLoading(false);","    }","  };","","  const handleSetPrimary = async (imageId) => {","    setLoading(true);","    setError(null);","","    try {","      await axios.post(`/api/events/${event.url_name}/set_primary_image/`, {","        image_id: imageId","      });","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to set primary image');","    } finally {","      setLoading(false);","    }","  };","","  return (","    <div className=\"w-full\">","      {error && (","        <Alert severity=\"error\" className=\"mb-4\">","          {error}","        </Alert>","      )}","","      {isAdmin && (","        <Box className=\"mb-4\">","          <input","            type=\"file\"","            id=\"image-upload\"","            multiple","            accept=\"image/*\"","            className=\"hidden\"","            onChange={handleFileSelect}","          />","          <label htmlFor=\"image-upload\">","            <Button","              variant=\"contained\"","              component=\"span\"","              disabled={uploadingImages}","              startIcon={<Upload className=\"w-4 h-4\" />}","            >","              {uploadingImages ? 'Uploading...' : 'Upload Images'}","            </Button>","          </label>","        </Box>","      )}","","      {event.images?.length > 0 ? (","        <ImageList cols={3} gap={8} className=\"!grid-cols-1 sm:!grid-cols-2 md:!grid-cols-3\">","          {event.images.map((image, index) => (","            <ImageListItem ","              key={image.id}","              className=\"relative group cursor-pointer overflow-hidden rounded-lg\"","              onClick={() => handleImageClick(image, index)}","            >","              <img","                src={image.image_url}","                alt={image.caption || 'Event image'}","                className=\"w-full h-full object-cover aspect-[4/3] hover:scale-105 transition-transform duration-300\"","              />","              {isAdmin && (","                <Box className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity\">","                  <Tooltip title={image.is_primary ? \"Primary Image\" : \"Set as Primary\"}>","                    <IconButton","                      size=\"small\"","                      onClick={(e) => {","                        e.stopPropagation();","                        handleSetPrimary(image.id);","                      }}","                      className=\"bg-white hover:bg-gray-100 mr-1\"","                    >","                      {image.is_primary ? (","                        <StarFilledIcon className=\"w-4 h-4\" />","                      ) : (","                        <Star className=\"w-4 h-4\" />","                      )}","                    </IconButton>","                  </Tooltip>","                  <Tooltip title=\"Delete Image\">","                    <IconButton","                      size=\"small\"","                      onClick={(e) => {","                        e.stopPropagation();","                        handleDeleteImage(image.id);","                      }}","                      className=\"bg-white hover:bg-gray-100\"","                    >","                      <Trash2 className=\"w-4 h-4\" />","                    </IconButton>","                  </Tooltip>","                </Box>","              )}","              {image.caption && (","                <Box className=\"absolute bottom-0 left-0 right-0 bg-black/50 text-white p-2 opacity-0 group-hover:opacity-100 transition-opacity\">","                  <Typography variant=\"caption\">","                    {image.caption}","                  </Typography>","                </Box>","              )}","            </ImageListItem>","          ))}","        </ImageList>","      ) : (","        <Typography color=\"text.secondary\" className=\"text-center py-8\">","          No images uploaded yet","        </Typography>","      )}","","      <Dialog","        open={!!selectedImage}","        onClose={handleClose}","        maxWidth=\"lg\"","        fullWidth","      >","        <DialogContent className=\"relative p-0\">","          <IconButton","            onClick={handleClose}","            className=\"absolute top-2 right-2 bg-white/80 hover:bg-white z-10\"","          >","            <CloseIcon className=\"w-5 h-5\" />","          </IconButton>","","          {selectedImage && (","            <>","              <img","                src={selectedImage.image_url}","                alt={selectedImage.caption || 'Event image'}","                className=\"w-full h-auto\"","              />","              ","              {selectedImage.caption && (","                <Typography className=\"p-4 text-center\">","                  {selectedImage.caption}","                </Typography>","              )}","","              {event.images.length > 1 && (","                <>","                  <IconButton","                    onClick={handlePrevious}","                    className=\"absolute left-2 top-1/2 -translate-y-1/2 bg-white/80 hover:bg-white\"","                  >","                    <ChevronLeft className=\"w-6 h-6\" />","                  </IconButton>","                  <IconButton","                    onClick={handleNext}","                    className=\"absolute right-2 top-1/2 -translate-y-1/2 bg-white/80 hover:bg-white\"","                  >","                    <ChevronRight className=\"w-6 h-6\" />","                  </IconButton>","                </>","              )}","            </>","          )}","        </DialogContent>","      </Dialog>","    </div>","  );","};","","export default EventGallery;"],"id":3},{"start":{"row":0,"column":0},"end":{"row":236,"column":28},"action":"insert","lines":["// src/components/EventGallery.js - Simplified version","import React, { useState } from 'react';","import {","  ImageList,","  ImageListItem,","  IconButton,","  Dialog,","  DialogContent,","  Button,","  Box,","  Typography,","  Alert,","  Tooltip","} from '@mui/material';","import {","  X as CloseIcon,","  ChevronLeft,","  ChevronRight,","  Trash2,","  Upload","} from 'lucide-react';","import axios from '../utils/axios';","","const EventGallery = ({ event, isAdmin, onImagesChange }) => {","  const [selectedImage, setSelectedImage] = useState(null);","  const [loading, setLoading] = useState(false);","  const [error, setError] = useState(null);","  const [uploadingImages, setUploadingImages] = useState(false);","","  const handleImageClick = (image, index) => {","    setSelectedImage({ ...image, index });","  };","","  const handleClose = () => {","    setSelectedImage(null);","  };","","  const handlePrevious = () => {","    const newIndex = (selectedImage.index - 1 + event.images.length) % event.images.length;","    setSelectedImage({ ...event.images[newIndex], index: newIndex });","  };","","  const handleNext = () => {","    const newIndex = (selectedImage.index + 1) % event.images.length;","    setSelectedImage({ ...event.images[newIndex], index: newIndex });","  };","","  const handleFileSelect = async (e) => {","    const files = Array.from(e.target.files);","    if (files.length === 0) return;","","    setUploadingImages(true);","    setError(null);","","    const formData = new FormData();","    files.forEach(file => {","      formData.append('images', file);","    });","","    try {","      await axios.post(","        `/api/events/${event.url_name}/upload_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to upload images');","    } finally {","      setUploadingImages(false);","    }","  };","","  const handleDeleteImage = async (imageId) => {","    if (!window.confirm('Are you sure you want to delete this image?')) return;","","    setLoading(true);","    setError(null);","","    try {","      // Send the image_id as FormData instead of JSON","      const formData = new FormData();","      formData.append('image_id', imageId);","","      await axios.post(","        `/api/events/${event.url_name}/delete_image/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      onImagesChange();","      if (selectedImage?.id === imageId) {","        setSelectedImage(null);","      }","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to delete image');","    } finally {","      setLoading(false);","    }","  };","","  return (","    <div className=\"w-full\">","      {error && (","        <Alert severity=\"error\" className=\"mb-4\">","          {error}","        </Alert>","      )}","","      {isAdmin && (","        <Box className=\"mb-4\">","          <input","            type=\"file\"","            id=\"image-upload\"","            multiple","            accept=\"image/*\"","            className=\"hidden\"","            onChange={handleFileSelect}","          />","          <label htmlFor=\"image-upload\">","            <Button","              variant=\"contained\"","              component=\"span\"","              disabled={uploadingImages}","              startIcon={<Upload className=\"w-4 h-4\" />}","            >","              {uploadingImages ? 'Uploading...' : 'Upload Images'}","            </Button>","          </label>","        </Box>","      )}","","      {event.images?.length > 0 ? (","        <ImageList cols={3} gap={8} className=\"!grid-cols-1 sm:!grid-cols-2 md:!grid-cols-3\">","          {event.images.map((image, index) => (","            <ImageListItem ","              key={image.id}","              className=\"relative group cursor-pointer overflow-hidden rounded-lg\"","              onClick={() => handleImageClick(image, index)}","            >","              <img","                src={image.image_url}","                alt={image.caption || 'Event image'}","                className=\"w-full h-full object-cover aspect-[4/3] hover:scale-105 transition-transform duration-300\"","              />","              {isAdmin && (","                <Box className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity\">","                  <Tooltip title=\"Delete Image\">","                    <IconButton","                      size=\"small\"","                      onClick={(e) => {","                        e.stopPropagation();","                        handleDeleteImage(image.id);","                      }}","                      className=\"bg-white hover:bg-gray-100\"","                    >","                      <Trash2 className=\"w-4 h-4\" />","                    </IconButton>","                  </Tooltip>","                </Box>","              )}","              {image.caption && (","                <Box className=\"absolute bottom-0 left-0 right-0 bg-black/50 text-white p-2 opacity-0 group-hover:opacity-100 transition-opacity\">","                  <Typography variant=\"caption\">","                    {image.caption}","                  </Typography>","                </Box>","              )}","            </ImageListItem>","          ))}","        </ImageList>","      ) : (","        <Typography color=\"text.secondary\" className=\"text-center py-8\">","          No images uploaded yet","        </Typography>","      )}","","      <Dialog","        open={!!selectedImage}","        onClose={handleClose}","        maxWidth=\"lg\"","        fullWidth","      >","        <DialogContent className=\"relative p-0\">","          <IconButton","            onClick={handleClose}","            className=\"absolute top-2 right-2 bg-white/80 hover:bg-white z-10\"","          >","            <CloseIcon className=\"w-5 h-5\" />","          </IconButton>","","          {selectedImage && (","            <>","              <img","                src={selectedImage.image_url}","                alt={selectedImage.caption || 'Event image'}","                className=\"w-full h-auto\"","              />","              ","              {selectedImage.caption && (","                <Typography className=\"p-4 text-center\">","                  {selectedImage.caption}","                </Typography>","              )}","","              {event.images.length > 1 && (","                <>","                  <IconButton","                    onClick={handlePrevious}","                    className=\"absolute left-2 top-1/2 -translate-y-1/2 bg-white/80 hover:bg-white\"","                  >","                    <ChevronLeft className=\"w-6 h-6\" />","                  </IconButton>","                  <IconButton","                    onClick={handleNext}","                    className=\"absolute right-2 top-1/2 -translate-y-1/2 bg-white/80 hover:bg-white\"","                  >","                    <ChevronRight className=\"w-6 h-6\" />","                  </IconButton>","                </>","              )}","            </>","          )}","        </DialogContent>","      </Dialog>","    </div>","  );","};","","export default EventGallery;"]}],[{"start":{"row":0,"column":0},"end":{"row":236,"column":28},"action":"remove","lines":["// src/components/EventGallery.js - Simplified version","import React, { useState } from 'react';","import {","  ImageList,","  ImageListItem,","  IconButton,","  Dialog,","  DialogContent,","  Button,","  Box,","  Typography,","  Alert,","  Tooltip","} from '@mui/material';","import {","  X as CloseIcon,","  ChevronLeft,","  ChevronRight,","  Trash2,","  Upload","} from 'lucide-react';","import axios from '../utils/axios';","","const EventGallery = ({ event, isAdmin, onImagesChange }) => {","  const [selectedImage, setSelectedImage] = useState(null);","  const [loading, setLoading] = useState(false);","  const [error, setError] = useState(null);","  const [uploadingImages, setUploadingImages] = useState(false);","","  const handleImageClick = (image, index) => {","    setSelectedImage({ ...image, index });","  };","","  const handleClose = () => {","    setSelectedImage(null);","  };","","  const handlePrevious = () => {","    const newIndex = (selectedImage.index - 1 + event.images.length) % event.images.length;","    setSelectedImage({ ...event.images[newIndex], index: newIndex });","  };","","  const handleNext = () => {","    const newIndex = (selectedImage.index + 1) % event.images.length;","    setSelectedImage({ ...event.images[newIndex], index: newIndex });","  };","","  const handleFileSelect = async (e) => {","    const files = Array.from(e.target.files);","    if (files.length === 0) return;","","    setUploadingImages(true);","    setError(null);","","    const formData = new FormData();","    files.forEach(file => {","      formData.append('images', file);","    });","","    try {","      await axios.post(","        `/api/events/${event.url_name}/upload_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to upload images');","    } finally {","      setUploadingImages(false);","    }","  };","","  const handleDeleteImage = async (imageId) => {","    if (!window.confirm('Are you sure you want to delete this image?')) return;","","    setLoading(true);","    setError(null);","","    try {","      // Send the image_id as FormData instead of JSON","      const formData = new FormData();","      formData.append('image_id', imageId);","","      await axios.post(","        `/api/events/${event.url_name}/delete_image/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      onImagesChange();","      if (selectedImage?.id === imageId) {","        setSelectedImage(null);","      }","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to delete image');","    } finally {","      setLoading(false);","    }","  };","","  return (","    <div className=\"w-full\">","      {error && (","        <Alert severity=\"error\" className=\"mb-4\">","          {error}","        </Alert>","      )}","","      {isAdmin && (","        <Box className=\"mb-4\">","          <input","            type=\"file\"","            id=\"image-upload\"","            multiple","            accept=\"image/*\"","            className=\"hidden\"","            onChange={handleFileSelect}","          />","          <label htmlFor=\"image-upload\">","            <Button","              variant=\"contained\"","              component=\"span\"","              disabled={uploadingImages}","              startIcon={<Upload className=\"w-4 h-4\" />}","            >","              {uploadingImages ? 'Uploading...' : 'Upload Images'}","            </Button>","          </label>","        </Box>","      )}","","      {event.images?.length > 0 ? (","        <ImageList cols={3} gap={8} className=\"!grid-cols-1 sm:!grid-cols-2 md:!grid-cols-3\">","          {event.images.map((image, index) => (","            <ImageListItem ","              key={image.id}","              className=\"relative group cursor-pointer overflow-hidden rounded-lg\"","              onClick={() => handleImageClick(image, index)}","            >","              <img","                src={image.image_url}","                alt={image.caption || 'Event image'}","                className=\"w-full h-full object-cover aspect-[4/3] hover:scale-105 transition-transform duration-300\"","              />","              {isAdmin && (","                <Box className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity\">","                  <Tooltip title=\"Delete Image\">","                    <IconButton","                      size=\"small\"","                      onClick={(e) => {","                        e.stopPropagation();","                        handleDeleteImage(image.id);","                      }}","                      className=\"bg-white hover:bg-gray-100\"","                    >","                      <Trash2 className=\"w-4 h-4\" />","                    </IconButton>","                  </Tooltip>","                </Box>","              )}","              {image.caption && (","                <Box className=\"absolute bottom-0 left-0 right-0 bg-black/50 text-white p-2 opacity-0 group-hover:opacity-100 transition-opacity\">","                  <Typography variant=\"caption\">","                    {image.caption}","                  </Typography>","                </Box>","              )}","            </ImageListItem>","          ))}","        </ImageList>","      ) : (","        <Typography color=\"text.secondary\" className=\"text-center py-8\">","          No images uploaded yet","        </Typography>","      )}","","      <Dialog","        open={!!selectedImage}","        onClose={handleClose}","        maxWidth=\"lg\"","        fullWidth","      >","        <DialogContent className=\"relative p-0\">","          <IconButton","            onClick={handleClose}","            className=\"absolute top-2 right-2 bg-white/80 hover:bg-white z-10\"","          >","            <CloseIcon className=\"w-5 h-5\" />","          </IconButton>","","          {selectedImage && (","            <>","              <img","                src={selectedImage.image_url}","                alt={selectedImage.caption || 'Event image'}","                className=\"w-full h-auto\"","              />","              ","              {selectedImage.caption && (","                <Typography className=\"p-4 text-center\">","                  {selectedImage.caption}","                </Typography>","              )}","","              {event.images.length > 1 && (","                <>","                  <IconButton","                    onClick={handlePrevious}","                    className=\"absolute left-2 top-1/2 -translate-y-1/2 bg-white/80 hover:bg-white\"","                  >","                    <ChevronLeft className=\"w-6 h-6\" />","                  </IconButton>","                  <IconButton","                    onClick={handleNext}","                    className=\"absolute right-2 top-1/2 -translate-y-1/2 bg-white/80 hover:bg-white\"","                  >","                    <ChevronRight className=\"w-6 h-6\" />","                  </IconButton>","                </>","              )}","            </>","          )}","        </DialogContent>","      </Dialog>","    </div>","  );","};","","export default EventGallery;"],"id":4},{"start":{"row":0,"column":0},"end":{"row":268,"column":28},"action":"insert","lines":["import React, { useState } from 'react';","import { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';","import {","  ImageList,","  ImageListItem,","  IconButton,","  Dialog,","  DialogContent,","  DialogActions,","  Button,","  Box,","  Typography,","  Alert,","  Paper","} from '@mui/material';","import {","  X as CloseIcon,","  ChevronLeft,","  ChevronRight,","  Trash2,","  Upload,","  MoveLeft,","  MoveRight","} from 'lucide-react';","import axios from '../utils/axios';","","const EventGallery = ({ event, isAdmin, onImagesChange }) => {","  const [selectedImage, setSelectedImage] = useState(null);","  const [loading, setLoading] = useState(false);","  const [error, setError] = useState(null);","  const [uploadingImages, setUploadingImages] = useState(false);","  const [images, setImages] = useState(event.images || []);","","  const handleImageClick = (image, index) => {","    setSelectedImage({ ...image, index });","  };","","  const handleClose = () => {","    setSelectedImage(null);","  };","","  const handlePrevious = () => {","    const newIndex = (selectedImage.index - 1 + images.length) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleNext = () => {","    const newIndex = (selectedImage.index + 1) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleMoveImage = async (imageId, direction) => {","    const currentIndex = images.findIndex(img => img.id === imageId);","    if (direction === 'left' && currentIndex > 0) {","      const newImages = Array.from(images);","      [newImages[currentIndex - 1], newImages[currentIndex]] = ","      [newImages[currentIndex], newImages[currentIndex - 1]];","      setImages(newImages);","      // Here you would also make an API call to update the order in the backend","    } else if (direction === 'right' && currentIndex < images.length - 1) {","      const newImages = Array.from(images);","      [newImages[currentIndex], newImages[currentIndex + 1]] = ","      [newImages[currentIndex + 1], newImages[currentIndex]];","      setImages(newImages);","      // Here you would also make an API call to update the order in the backend","    }","  };","","  const handleFileSelect = async (e) => {","    const files = Array.from(e.target.files);","    if (files.length === 0) return;","","    setUploadingImages(true);","    setError(null);","","    const formData = new FormData();","    files.forEach(file => {","      formData.append('images', file);","    });","","    try {","      const response = await axios.post(","        `/api/events/${event.url_name}/upload_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      onImagesChange();","      setImages([...images, ...response.data]);","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to upload images');","    } finally {","      setUploadingImages(false);","    }","  };","","  const handleDeleteImage = async (imageId) => {","    if (!window.confirm('Are you sure you want to delete this image?')) return;","","    setLoading(true);","    setError(null);","","    try {","      const formData = new FormData();","      formData.append('image_id', imageId);","","      await axios.post(","        `/api/events/${event.url_name}/delete_image/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      ","      setImages(images.filter(img => img.id !== imageId));","      ","      if (selectedImage?.id === imageId) {","        setSelectedImage(null);","      }","      ","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to delete image');","    } finally {","      setLoading(false);","    }","  };","","  return (","    <div className=\"w-full\">","      {error && (","        <Alert severity=\"error\" className=\"mb-4\">","          {error}","        </Alert>","      )}","","      {isAdmin && (","        <Box className=\"mb-4\">","          <input","            type=\"file\"","            id=\"image-upload\"","            multiple","            accept=\"image/*\"","            className=\"hidden\"","            onChange={handleFileSelect}","          />","          <label htmlFor=\"image-upload\">","            <Button","              variant=\"contained\"","              component=\"span\"","              disabled={uploadingImages}","              startIcon={<Upload className=\"w-4 h-4\" />}","            >","              {uploadingImages ? 'Uploading...' : 'Upload Images'}","            </Button>","          </label>","        </Box>","      )}","","      {images?.length > 0 ? (","        <ImageList cols={3} gap={16} className=\"!grid-cols-1 sm:!grid-cols-2 md:!grid-cols-3\">","          {images.map((image, index) => (","            <ImageListItem ","              key={image.id}","              className=\"relative group\"","            >","              <Paper elevation={3} className=\"overflow-hidden\">","                <img","                  src={image.image_url}","                  alt={image.caption || 'Event image'}","                  className=\"w-full h-full object-cover aspect-[4/3] cursor-pointer\"","                  onClick={() => handleImageClick(image, index)}","                />","                {isAdmin && (","                  <Box className=\"flex justify-between items-center p-2 bg-gray-100\">","                    <Box className=\"flex gap-1\">","                      <IconButton","                        size=\"small\"","                        onClick={() => handleMoveImage(image.id, 'left')}","                        disabled={index === 0}","                        className=\"bg-white hover:bg-gray-200\"","                      >","                        <MoveLeft className=\"w-4 h-4\" />","                      </IconButton>","                      <IconButton","                        size=\"small\"","                        onClick={() => handleMoveImage(image.id, 'right')}","                        disabled={index === images.length - 1}","                        className=\"bg-white hover:bg-gray-200\"","                      >","                        <MoveRight className=\"w-4 h-4\" />","                      </IconButton>","                    </Box>","                    <IconButton","                      size=\"small\"","                      onClick={() => handleDeleteImage(image.id)}","                      className=\"bg-red-500 hover:bg-red-600 text-white\"","                    >","                      <Trash2 className=\"w-4 h-4\" />","                    </IconButton>","                  </Box>","                )}","              </Paper>","            </ImageListItem>","          ))}","        </ImageList>","      ) : (","        <Typography color=\"text.secondary\" className=\"text-center py-8\">","          No images uploaded yet","        </Typography>","      )}","","      <Dialog","        open={!!selectedImage}","        onClose={handleClose}","        maxWidth=\"lg\"","        fullWidth","        PaperProps={{","          sx: {","            backgroundColor: 'transparent',","            boxShadow: 'none',","          }","        }}","      >","        <Paper sx={{ bgcolor: 'background.paper', mx: 'auto', maxWidth: 'calc(100% - 48px)' }}>","          <Box sx={{ p: 2, display: 'flex', justifyContent: 'flex-end' }}>","            <IconButton onClick={handleClose}>","              <CloseIcon />","            </IconButton>","          </Box>","          ","          <DialogContent className=\"relative p-0\">","            <img","              src={selectedImage?.image_url}","              alt={selectedImage?.caption || 'Event image'}","              className=\"w-full h-auto\"","            />","          </DialogContent>","","          {images.length > 1 && (","            <DialogActions sx={{ justifyContent: 'space-between', p: 2 }}>","              <IconButton","                onClick={handlePrevious}","                size=\"large\"","                className=\"bg-white hover:bg-gray-100\"","              >","                <ChevronLeft className=\"w-6 h-6\" />","              </IconButton>","              <IconButton","                onClick={handleNext}","                size=\"large\"","                className=\"bg-white hover:bg-gray-100\"","              >","                <ChevronRight className=\"w-6 h-6\" />","              </IconButton>","            </DialogActions>","          )}","        </Paper>","      </Dialog>","    </div>","  );","};","","export default EventGallery;"]}],[{"start":{"row":133,"column":2},"end":{"row":268,"column":28},"action":"remove","lines":["return (","    <div className=\"w-full\">","      {error && (","        <Alert severity=\"error\" className=\"mb-4\">","          {error}","        </Alert>","      )}","","      {isAdmin && (","        <Box className=\"mb-4\">","          <input","            type=\"file\"","            id=\"image-upload\"","            multiple","            accept=\"image/*\"","            className=\"hidden\"","            onChange={handleFileSelect}","          />","          <label htmlFor=\"image-upload\">","            <Button","              variant=\"contained\"","              component=\"span\"","              disabled={uploadingImages}","              startIcon={<Upload className=\"w-4 h-4\" />}","            >","              {uploadingImages ? 'Uploading...' : 'Upload Images'}","            </Button>","          </label>","        </Box>","      )}","","      {images?.length > 0 ? (","        <ImageList cols={3} gap={16} className=\"!grid-cols-1 sm:!grid-cols-2 md:!grid-cols-3\">","          {images.map((image, index) => (","            <ImageListItem ","              key={image.id}","              className=\"relative group\"","            >","              <Paper elevation={3} className=\"overflow-hidden\">","                <img","                  src={image.image_url}","                  alt={image.caption || 'Event image'}","                  className=\"w-full h-full object-cover aspect-[4/3] cursor-pointer\"","                  onClick={() => handleImageClick(image, index)}","                />","                {isAdmin && (","                  <Box className=\"flex justify-between items-center p-2 bg-gray-100\">","                    <Box className=\"flex gap-1\">","                      <IconButton","                        size=\"small\"","                        onClick={() => handleMoveImage(image.id, 'left')}","                        disabled={index === 0}","                        className=\"bg-white hover:bg-gray-200\"","                      >","                        <MoveLeft className=\"w-4 h-4\" />","                      </IconButton>","                      <IconButton","                        size=\"small\"","                        onClick={() => handleMoveImage(image.id, 'right')}","                        disabled={index === images.length - 1}","                        className=\"bg-white hover:bg-gray-200\"","                      >","                        <MoveRight className=\"w-4 h-4\" />","                      </IconButton>","                    </Box>","                    <IconButton","                      size=\"small\"","                      onClick={() => handleDeleteImage(image.id)}","                      className=\"bg-red-500 hover:bg-red-600 text-white\"","                    >","                      <Trash2 className=\"w-4 h-4\" />","                    </IconButton>","                  </Box>","                )}","              </Paper>","            </ImageListItem>","          ))}","        </ImageList>","      ) : (","        <Typography color=\"text.secondary\" className=\"text-center py-8\">","          No images uploaded yet","        </Typography>","      )}","","      <Dialog","        open={!!selectedImage}","        onClose={handleClose}","        maxWidth=\"lg\"","        fullWidth","        PaperProps={{","          sx: {","            backgroundColor: 'transparent',","            boxShadow: 'none',","          }","        }}","      >","        <Paper sx={{ bgcolor: 'background.paper', mx: 'auto', maxWidth: 'calc(100% - 48px)' }}>","          <Box sx={{ p: 2, display: 'flex', justifyContent: 'flex-end' }}>","            <IconButton onClick={handleClose}>","              <CloseIcon />","            </IconButton>","          </Box>","          ","          <DialogContent className=\"relative p-0\">","            <img","              src={selectedImage?.image_url}","              alt={selectedImage?.caption || 'Event image'}","              className=\"w-full h-auto\"","            />","          </DialogContent>","","          {images.length > 1 && (","            <DialogActions sx={{ justifyContent: 'space-between', p: 2 }}>","              <IconButton","                onClick={handlePrevious}","                size=\"large\"","                className=\"bg-white hover:bg-gray-100\"","              >","                <ChevronLeft className=\"w-6 h-6\" />","              </IconButton>","              <IconButton","                onClick={handleNext}","                size=\"large\"","                className=\"bg-white hover:bg-gray-100\"","              >","                <ChevronRight className=\"w-6 h-6\" />","              </IconButton>","            </DialogActions>","          )}","        </Paper>","      </Dialog>","    </div>","  );","};","","export default EventGallery;"],"id":5},{"start":{"row":133,"column":2},"end":{"row":290,"column":28},"action":"insert","lines":["return (","    <div className=\"w-full\">","      {error && (","        <Alert severity=\"error\" className=\"mb-4\">","          {error}","        </Alert>","      )}","","      {isAdmin && (","        <Box className=\"mb-4\">","          <input","            type=\"file\"","            id=\"image-upload\"","            multiple","            accept=\"image/*\"","            className=\"hidden\"","            onChange={handleFileSelect}","          />","          <label htmlFor=\"image-upload\">","            <Button","              variant=\"contained\"","              component=\"span\"","              disabled={uploadingImages}","              startIcon={<Upload className=\"w-4 h-4\" />}","            >","              {uploadingImages ? 'Uploading...' : 'Upload Images'}","            </Button>","          </label>","        </Box>","      )}","","      <ImageList cols={3} gap={8} className=\"!grid-cols-1 sm:!grid-cols-2 md:!grid-cols-3\">","        {event.images?.map((image, index) => (","          <ImageListItem key={image.id} className=\"relative\">","            <Paper ","              elevation={2} ","              className=\"h-full\"","              sx={{","                '&:hover .image-controls': {","                  opacity: 1,","                },","              }}","            >","              <div className=\"relative\">","                <img","                  src={image.image_url}","                  alt={image.caption || 'Event image'}","                  className=\"w-full h-full object-cover aspect-[4/3] cursor-pointer\"","                  onClick={() => handleImageClick(image, index)}","                />","                {isAdmin && (","                  <div className=\"image-controls absolute bottom-0 left-0 right-0 bg-black/50 p-2 opacity-0 transition-opacity duration-200\">","                    <div className=\"flex justify-between items-center\">","                      <div className=\"flex gap-1\">","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'left')}","                          disabled={index === 0}","                          className=\"!bg-white hover:!bg-gray-200\"","                        >","                          <MoveLeft className=\"w-4 h-4\" />","                        </IconButton>","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'right')}","                          disabled={index === event.images.length - 1}","                          className=\"!bg-white hover:!bg-gray-200\"","                        >","                          <MoveRight className=\"w-4 h-4\" />","                        </IconButton>","                      </div>","                      <IconButton","                        size=\"small\"","                        onClick={() => handleDeleteImage(image.id)}","                        className=\"!bg-red-500 hover:!bg-red-600 !text-white\"","                      >","                        <Trash2 className=\"w-4 h-4\" />","                      </IconButton>","                    </div>","                  </div>","                )}","              </div>","            </Paper>","          </ImageListItem>","        ))}","      </ImageList>","","      <Dialog","        open={!!selectedImage}","        onClose={handleClose}","        maxWidth=\"md\"  // Changed from lg to md","        fullWidth={false}  // Changed to false","        PaperProps={{","          sx: {","            m: 0,  // Remove margin","            maxWidth: '800px',  // Set max width","            width: '90%',  // Set relative width","            bgcolor: 'background.paper',","          }","        }}","      >","        <Box sx={{ position: 'relative' }}>","          <IconButton","            onClick={handleClose}","            sx={{","              position: 'absolute',","              right: 8,","              top: 8,","              zIndex: 1,","              bgcolor: 'background.paper',","              '&:hover': { bgcolor: 'action.hover' }","            }}","          >","            <CloseIcon />","          </IconButton>","          ","          <img","            src={selectedImage?.image_url}","            alt={selectedImage?.caption || 'Event image'}","            style={{","              width: '100%',","              height: 'auto',","              maxHeight: '80vh',","              objectFit: 'contain'","            }}","          />","","          {event.images?.length > 1 && (","            <Box sx={{ ","              position: 'absolute', ","              bottom: 16, ","              left: 0, ","              right: 0, ","              display: 'flex', ","              justifyContent: 'space-between', ","              px: 2 ","            }}>","              <IconButton","                onClick={handlePrevious}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronLeft />","              </IconButton>","              <IconButton","                onClick={handleNext}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronRight />","              </IconButton>","            </Box>","          )}","        </Box>","      </Dialog>","    </div>","  );","};","","export default EventGallery;"]}],[{"start":{"row":0,"column":0},"end":{"row":24,"column":35},"action":"remove","lines":["import React, { useState } from 'react';","import { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';","import {","  ImageList,","  ImageListItem,","  IconButton,","  Dialog,","  DialogContent,","  DialogActions,","  Button,","  Box,","  Typography,","  Alert,","  Paper","} from '@mui/material';","import {","  X as CloseIcon,","  ChevronLeft,","  ChevronRight,","  Trash2,","  Upload,","  MoveLeft,","  MoveRight","} from 'lucide-react';","import axios from '../utils/axios';"],"id":7},{"start":{"row":0,"column":0},"end":{"row":22,"column":35},"action":"insert","lines":["import React, { useState } from 'react';","import {","  ImageList,","  ImageListItem,","  IconButton,","  Dialog,","  DialogContent,","  Button,","  Box,","  Typography,","  Alert,","  Paper","} from '@mui/material';","import {","  X as CloseIcon,","  ChevronLeft,","  ChevronRight,","  Trash2,","  Upload,","  MoveLeft,","  MoveRight","} from 'lucide-react';","import axios from '../utils/axios';"]}],[{"start":{"row":0,"column":7},"end":{"row":0,"column":14},"action":"remove","lines":["React, "],"id":8}],[{"start":{"row":49,"column":2},"end":{"row":64,"column":4},"action":"remove","lines":["const handleMoveImage = async (imageId, direction) => {","    const currentIndex = images.findIndex(img => img.id === imageId);","    if (direction === 'left' && currentIndex > 0) {","      const newImages = Array.from(images);","      [newImages[currentIndex - 1], newImages[currentIndex]] = ","      [newImages[currentIndex], newImages[currentIndex - 1]];","      setImages(newImages);","      // Here you would also make an API call to update the order in the backend","    } else if (direction === 'right' && currentIndex < images.length - 1) {","      const newImages = Array.from(images);","      [newImages[currentIndex], newImages[currentIndex + 1]] = ","      [newImages[currentIndex + 1], newImages[currentIndex]];","      setImages(newImages);","      // Here you would also make an API call to update the order in the backend","    }","  };"],"id":9},{"start":{"row":49,"column":2},"end":{"row":81,"column":2},"action":"insert","lines":["const handleMoveImage = async (imageId, direction) => {","  try {","    const formData = new FormData();","    formData.append('image_id', imageId);","    formData.append('direction', direction);","","    await axios.post(","      `/api/events/${event.url_name}/reorder_images/`,","      formData,","      {","        headers: {","          'Content-Type': 'multipart/form-data',","        },","      }","    );","    ","    // Update local state to show the change immediately","    const currentIndex = images.findIndex(img => img.id === imageId);","    const newImages = Array.from(images);","    ","    if (direction === 'left' && currentIndex > 0) {","      [newImages[currentIndex - 1], newImages[currentIndex]] = ","      [newImages[currentIndex], newImages[currentIndex - 1]];","    } else if (direction === 'right' && currentIndex < images.length - 1) {","      [newImages[currentIndex], newImages[currentIndex + 1]] = ","      [newImages[currentIndex + 1], newImages[currentIndex]];","    }","    ","    setImages(newImages);","  } catch (err) {","    setError(err.response?.data?.detail || 'Failed to reorder images');","  }","};"]}],[{"start":{"row":49,"column":2},"end":{"row":63,"column":6},"action":"remove","lines":["const handleMoveImage = async (imageId, direction) => {","  try {","    const formData = new FormData();","    formData.append('image_id', imageId);","    formData.append('direction', direction);","","    await axios.post(","      `/api/events/${event.url_name}/reorder_images/`,","      formData,","      {","        headers: {","          'Content-Type': 'multipart/form-data',","        },","      }","    );"],"id":10},{"start":{"row":49,"column":2},"end":{"row":69,"column":2},"action":"insert","lines":["const handleMoveImage = async (imageId, direction) => {","  try {","    const formData = new FormData();","    formData.append('image_id', imageId);","    formData.append('direction', direction);","","    await axios.post(","      `/api/events/${event.url_name}/reorder_images/`,","      formData,","      {","        headers: {","          'Content-Type': 'multipart/form-data',","        },","      }","    );","    ","    onImagesChange(); // Refresh the event data","  } catch (err) {","    setError(err.response?.data?.detail || 'Failed to reorder images');","  }","};"]}],[{"start":{"row":49,"column":2},"end":{"row":87,"column":2},"action":"remove","lines":["const handleMoveImage = async (imageId, direction) => {","  try {","    const formData = new FormData();","    formData.append('image_id', imageId);","    formData.append('direction', direction);","","    await axios.post(","      `/api/events/${event.url_name}/reorder_images/`,","      formData,","      {","        headers: {","          'Content-Type': 'multipart/form-data',","        },","      }","    );","    ","    onImagesChange(); // Refresh the event data","  } catch (err) {","    setError(err.response?.data?.detail || 'Failed to reorder images');","  }","};","    ","    // Update local state to show the change immediately","    const currentIndex = images.findIndex(img => img.id === imageId);","    const newImages = Array.from(images);","    ","    if (direction === 'left' && currentIndex > 0) {","      [newImages[currentIndex - 1], newImages[currentIndex]] = ","      [newImages[currentIndex], newImages[currentIndex - 1]];","    } else if (direction === 'right' && currentIndex < images.length - 1) {","      [newImages[currentIndex], newImages[currentIndex + 1]] = ","      [newImages[currentIndex + 1], newImages[currentIndex]];","    }","    ","    setImages(newImages);","  } catch (err) {","    setError(err.response?.data?.detail || 'Failed to reorder images');","  }","};"],"id":12},{"start":{"row":49,"column":2},"end":{"row":68,"column":3},"action":"insert","lines":["const handleMoveImage = async (imageId, direction) => {","  try {","    const formData = new FormData();","    formData.append('image_id', imageId);","    formData.append('direction', direction);","","    await axios.post(","      `/api/events/${event.url_name}/reorder_images/`,","      formData,","      {","        headers: {","          'Content-Type': 'multipart/form-data',","        },","      }","    );","    ","    onImagesChange(); // Refresh the event data","  } catch (err) {","    setError(err.response?.data?.detail || 'Failed to reorder images');","  }"]}],[{"start":{"row":0,"column":0},"end":{"row":292,"column":28},"action":"remove","lines":["import { useState } from 'react';","import {","  ImageList,","  ImageListItem,","  IconButton,","  Dialog,","  DialogContent,","  Button,","  Box,","  Typography,","  Alert,","  Paper","} from '@mui/material';","import {","  X as CloseIcon,","  ChevronLeft,","  ChevronRight,","  Trash2,","  Upload,","  MoveLeft,","  MoveRight","} from 'lucide-react';","import axios from '../utils/axios';","","const EventGallery = ({ event, isAdmin, onImagesChange }) => {","  const [selectedImage, setSelectedImage] = useState(null);","  const [loading, setLoading] = useState(false);","  const [error, setError] = useState(null);","  const [uploadingImages, setUploadingImages] = useState(false);","  const [images, setImages] = useState(event.images || []);","","  const handleImageClick = (image, index) => {","    setSelectedImage({ ...image, index });","  };","","  const handleClose = () => {","    setSelectedImage(null);","  };","","  const handlePrevious = () => {","    const newIndex = (selectedImage.index - 1 + images.length) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleNext = () => {","    const newIndex = (selectedImage.index + 1) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleMoveImage = async (imageId, direction) => {","  try {","    const formData = new FormData();","    formData.append('image_id', imageId);","    formData.append('direction', direction);","","    await axios.post(","      `/api/events/${event.url_name}/reorder_images/`,","      formData,","      {","        headers: {","          'Content-Type': 'multipart/form-data',","        },","      }","    );","    ","    onImagesChange(); // Refresh the event data","  } catch (err) {","    setError(err.response?.data?.detail || 'Failed to reorder images');","  }","","  const handleFileSelect = async (e) => {","    const files = Array.from(e.target.files);","    if (files.length === 0) return;","","    setUploadingImages(true);","    setError(null);","","    const formData = new FormData();","    files.forEach(file => {","      formData.append('images', file);","    });","","    try {","      const response = await axios.post(","        `/api/events/${event.url_name}/upload_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      onImagesChange();","      setImages([...images, ...response.data]);","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to upload images');","    } finally {","      setUploadingImages(false);","    }","  };","","  const handleDeleteImage = async (imageId) => {","    if (!window.confirm('Are you sure you want to delete this image?')) return;","","    setLoading(true);","    setError(null);","","    try {","      const formData = new FormData();","      formData.append('image_id', imageId);","","      await axios.post(","        `/api/events/${event.url_name}/delete_image/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      ","      setImages(images.filter(img => img.id !== imageId));","      ","      if (selectedImage?.id === imageId) {","        setSelectedImage(null);","      }","      ","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to delete image');","    } finally {","      setLoading(false);","    }","  };","","  return (","    <div className=\"w-full\">","      {error && (","        <Alert severity=\"error\" className=\"mb-4\">","          {error}","        </Alert>","      )}","","      {isAdmin && (","        <Box className=\"mb-4\">","          <input","            type=\"file\"","            id=\"image-upload\"","            multiple","            accept=\"image/*\"","            className=\"hidden\"","            onChange={handleFileSelect}","          />","          <label htmlFor=\"image-upload\">","            <Button","              variant=\"contained\"","              component=\"span\"","              disabled={uploadingImages}","              startIcon={<Upload className=\"w-4 h-4\" />}","            >","              {uploadingImages ? 'Uploading...' : 'Upload Images'}","            </Button>","          </label>","        </Box>","      )}","","      <ImageList cols={3} gap={8} className=\"!grid-cols-1 sm:!grid-cols-2 md:!grid-cols-3\">","        {event.images?.map((image, index) => (","          <ImageListItem key={image.id} className=\"relative\">","            <Paper ","              elevation={2} ","              className=\"h-full\"","              sx={{","                '&:hover .image-controls': {","                  opacity: 1,","                },","              }}","            >","              <div className=\"relative\">","                <img","                  src={image.image_url}","                  alt={image.caption || 'Event image'}","                  className=\"w-full h-full object-cover aspect-[4/3] cursor-pointer\"","                  onClick={() => handleImageClick(image, index)}","                />","                {isAdmin && (","                  <div className=\"image-controls absolute bottom-0 left-0 right-0 bg-black/50 p-2 opacity-0 transition-opacity duration-200\">","                    <div className=\"flex justify-between items-center\">","                      <div className=\"flex gap-1\">","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'left')}","                          disabled={index === 0}","                          className=\"!bg-white hover:!bg-gray-200\"","                        >","                          <MoveLeft className=\"w-4 h-4\" />","                        </IconButton>","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'right')}","                          disabled={index === event.images.length - 1}","                          className=\"!bg-white hover:!bg-gray-200\"","                        >","                          <MoveRight className=\"w-4 h-4\" />","                        </IconButton>","                      </div>","                      <IconButton","                        size=\"small\"","                        onClick={() => handleDeleteImage(image.id)}","                        className=\"!bg-red-500 hover:!bg-red-600 !text-white\"","                      >","                        <Trash2 className=\"w-4 h-4\" />","                      </IconButton>","                    </div>","                  </div>","                )}","              </div>","            </Paper>","          </ImageListItem>","        ))}","      </ImageList>","","      <Dialog","        open={!!selectedImage}","        onClose={handleClose}","        maxWidth=\"md\"  // Changed from lg to md","        fullWidth={false}  // Changed to false","        PaperProps={{","          sx: {","            m: 0,  // Remove margin","            maxWidth: '800px',  // Set max width","            width: '90%',  // Set relative width","            bgcolor: 'background.paper',","          }","        }}","      >","        <Box sx={{ position: 'relative' }}>","          <IconButton","            onClick={handleClose}","            sx={{","              position: 'absolute',","              right: 8,","              top: 8,","              zIndex: 1,","              bgcolor: 'background.paper',","              '&:hover': { bgcolor: 'action.hover' }","            }}","          >","            <CloseIcon />","          </IconButton>","          ","          <img","            src={selectedImage?.image_url}","            alt={selectedImage?.caption || 'Event image'}","            style={{","              width: '100%',","              height: 'auto',","              maxHeight: '80vh',","              objectFit: 'contain'","            }}","          />","","          {event.images?.length > 1 && (","            <Box sx={{ ","              position: 'absolute', ","              bottom: 16, ","              left: 0, ","              right: 0, ","              display: 'flex', ","              justifyContent: 'space-between', ","              px: 2 ","            }}>","              <IconButton","                onClick={handlePrevious}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronLeft />","              </IconButton>","              <IconButton","                onClick={handleNext}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronRight />","              </IconButton>","            </Box>","          )}","        </Box>","      </Dialog>","    </div>","  );","};","","export default EventGallery;"],"id":13},{"start":{"row":0,"column":0},"end":{"row":293,"column":28},"action":"insert","lines":["import { useState } from 'react';","import {","  ImageList,","  ImageListItem,","  IconButton,","  Dialog,","  DialogContent,","  Button,","  Box,","  Typography,","  Alert,","  Paper","} from '@mui/material';","import {","  X as CloseIcon,","  ChevronLeft,","  ChevronRight,","  Trash2,","  Upload,","  MoveLeft,","  MoveRight","} from 'lucide-react';","import axios from '../utils/axios';","","const EventGallery = ({ event, isAdmin, onImagesChange }) => {","  const [selectedImage, setSelectedImage] = useState(null);","  const [loading, setLoading] = useState(false);","  const [error, setError] = useState(null);","  const [uploadingImages, setUploadingImages] = useState(false);","  const [images, setImages] = useState(event.images || []);","","  const handleImageClick = (image, index) => {","    setSelectedImage({ ...image, index });","  };","","  const handleClose = () => {","    setSelectedImage(null);","  };","","  const handlePrevious = () => {","    const newIndex = (selectedImage.index - 1 + images.length) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleNext = () => {","    const newIndex = (selectedImage.index + 1) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleMoveImage = async (imageId, direction) => {","    try {","      const formData = new FormData();","      formData.append('image_id', imageId);","      formData.append('direction', direction);","","      await axios.post(","        `/api/events/${event.url_name}/reorder_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      ","      onImagesChange(); // Refresh the event data","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to reorder images');","    }","  };","","  const handleFileSelect = async (e) => {","    const files = Array.from(e.target.files);","    if (files.length === 0) return;","","    setUploadingImages(true);","    setError(null);","","    const formData = new FormData();","    files.forEach(file => {","      formData.append('images', file);","    });","","    try {","      const response = await axios.post(","        `/api/events/${event.url_name}/upload_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      onImagesChange();","      setImages([...images, ...response.data]);","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to upload images');","    } finally {","      setUploadingImages(false);","    }","  };","","  const handleDeleteImage = async (imageId) => {","    if (!window.confirm('Are you sure you want to delete this image?')) return;","","    setLoading(true);","    setError(null);","","    try {","      const formData = new FormData();","      formData.append('image_id', imageId);","","      await axios.post(","        `/api/events/${event.url_name}/delete_image/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      ","      setImages(images.filter(img => img.id !== imageId));","      ","      if (selectedImage?.id === imageId) {","        setSelectedImage(null);","      }","      ","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to delete image');","    } finally {","      setLoading(false);","    }","  };","","  return (","    <div className=\"w-full\">","      {error && (","        <Alert severity=\"error\" className=\"mb-4\">","          {error}","        </Alert>","      )}","","      {isAdmin && (","        <Box className=\"mb-4\">","          <input","            type=\"file\"","            id=\"image-upload\"","            multiple","            accept=\"image/*\"","            className=\"hidden\"","            onChange={handleFileSelect}","          />","          <label htmlFor=\"image-upload\">","            <Button","              variant=\"contained\"","              component=\"span\"","              disabled={uploadingImages}","              startIcon={<Upload className=\"w-4 h-4\" />}","            >","              {uploadingImages ? 'Uploading...' : 'Upload Images'}","            </Button>","          </label>","        </Box>","      )}","","      <ImageList cols={3} gap={8} className=\"!grid-cols-1 sm:!grid-cols-2 md:!grid-cols-3\">","        {event.images?.map((image, index) => (","          <ImageListItem key={image.id} className=\"relative\">","            <Paper ","              elevation={2} ","              className=\"h-full\"","              sx={{","                '&:hover .image-controls': {","                  opacity: 1,","                },","              }}","            >","              <div className=\"relative\">","                <img","                  src={image.image_url}","                  alt={image.caption || 'Event image'}","                  className=\"w-full h-full object-cover aspect-[4/3] cursor-pointer\"","                  onClick={() => handleImageClick(image, index)}","                />","                {isAdmin && (","                  <div className=\"image-controls absolute bottom-0 left-0 right-0 bg-black/50 p-2 opacity-0 transition-opacity duration-200\">","                    <div className=\"flex justify-between items-center\">","                      <div className=\"flex gap-1\">","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'left')}","                          disabled={index === 0}","                          className=\"!bg-white hover:!bg-gray-200\"","                        >","                          <MoveLeft className=\"w-4 h-4\" />","                        </IconButton>","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'right')}","                          disabled={index === event.images.length - 1}","                          className=\"!bg-white hover:!bg-gray-200\"","                        >","                          <MoveRight className=\"w-4 h-4\" />","                        </IconButton>","                      </div>","                      <IconButton","                        size=\"small\"","                        onClick={() => handleDeleteImage(image.id)}","                        className=\"!bg-red-500 hover:!bg-red-600 !text-white\"","                      >","                        <Trash2 className=\"w-4 h-4\" />","                      </IconButton>","                    </div>","                  </div>","                )}","              </div>","            </Paper>","          </ImageListItem>","        ))}","      </ImageList>","","      <Dialog","        open={!!selectedImage}","        onClose={handleClose}","        maxWidth=\"md\"","        fullWidth={false}","        PaperProps={{","          sx: {","            m: 0,","            maxWidth: '800px',","            width: '90%',","            bgcolor: 'background.paper',","          }","        }}","      >","        <Box sx={{ position: 'relative' }}>","          <IconButton","            onClick={handleClose}","            sx={{","              position: 'absolute',","              right: 8,","              top: 8,","              zIndex: 1,","              bgcolor: 'background.paper',","              '&:hover': { bgcolor: 'action.hover' }","            }}","          >","            <CloseIcon />","          </IconButton>","          ","          <img","            src={selectedImage?.image_url}","            alt={selectedImage?.caption || 'Event image'}","            style={{","              width: '100%',","              height: 'auto',","              maxHeight: '80vh',","              objectFit: 'contain'","            }}","          />","","          {event.images?.length > 1 && (","            <Box sx={{ ","              position: 'absolute', ","              bottom: 16, ","              left: 0, ","              right: 0, ","              display: 'flex', ","              justifyContent: 'space-between', ","              px: 2 ","            }}>","              <IconButton","                onClick={handlePrevious}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronLeft />","              </IconButton>","              <IconButton","                onClick={handleNext}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronRight />","              </IconButton>","            </Box>","          )}","        </Box>","      </Dialog>","    </div>","  );","};","","export default EventGallery;"]}],[{"start":{"row":0,"column":0},"end":{"row":293,"column":28},"action":"remove","lines":["import { useState } from 'react';","import {","  ImageList,","  ImageListItem,","  IconButton,","  Dialog,","  DialogContent,","  Button,","  Box,","  Typography,","  Alert,","  Paper","} from '@mui/material';","import {","  X as CloseIcon,","  ChevronLeft,","  ChevronRight,","  Trash2,","  Upload,","  MoveLeft,","  MoveRight","} from 'lucide-react';","import axios from '../utils/axios';","","const EventGallery = ({ event, isAdmin, onImagesChange }) => {","  const [selectedImage, setSelectedImage] = useState(null);","  const [loading, setLoading] = useState(false);","  const [error, setError] = useState(null);","  const [uploadingImages, setUploadingImages] = useState(false);","  const [images, setImages] = useState(event.images || []);","","  const handleImageClick = (image, index) => {","    setSelectedImage({ ...image, index });","  };","","  const handleClose = () => {","    setSelectedImage(null);","  };","","  const handlePrevious = () => {","    const newIndex = (selectedImage.index - 1 + images.length) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleNext = () => {","    const newIndex = (selectedImage.index + 1) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleMoveImage = async (imageId, direction) => {","    try {","      const formData = new FormData();","      formData.append('image_id', imageId);","      formData.append('direction', direction);","","      await axios.post(","        `/api/events/${event.url_name}/reorder_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      ","      onImagesChange(); // Refresh the event data","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to reorder images');","    }","  };","","  const handleFileSelect = async (e) => {","    const files = Array.from(e.target.files);","    if (files.length === 0) return;","","    setUploadingImages(true);","    setError(null);","","    const formData = new FormData();","    files.forEach(file => {","      formData.append('images', file);","    });","","    try {","      const response = await axios.post(","        `/api/events/${event.url_name}/upload_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      onImagesChange();","      setImages([...images, ...response.data]);","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to upload images');","    } finally {","      setUploadingImages(false);","    }","  };","","  const handleDeleteImage = async (imageId) => {","    if (!window.confirm('Are you sure you want to delete this image?')) return;","","    setLoading(true);","    setError(null);","","    try {","      const formData = new FormData();","      formData.append('image_id', imageId);","","      await axios.post(","        `/api/events/${event.url_name}/delete_image/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      ","      setImages(images.filter(img => img.id !== imageId));","      ","      if (selectedImage?.id === imageId) {","        setSelectedImage(null);","      }","      ","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to delete image');","    } finally {","      setLoading(false);","    }","  };","","  return (","    <div className=\"w-full\">","      {error && (","        <Alert severity=\"error\" className=\"mb-4\">","          {error}","        </Alert>","      )}","","      {isAdmin && (","        <Box className=\"mb-4\">","          <input","            type=\"file\"","            id=\"image-upload\"","            multiple","            accept=\"image/*\"","            className=\"hidden\"","            onChange={handleFileSelect}","          />","          <label htmlFor=\"image-upload\">","            <Button","              variant=\"contained\"","              component=\"span\"","              disabled={uploadingImages}","              startIcon={<Upload className=\"w-4 h-4\" />}","            >","              {uploadingImages ? 'Uploading...' : 'Upload Images'}","            </Button>","          </label>","        </Box>","      )}","","      <ImageList cols={3} gap={8} className=\"!grid-cols-1 sm:!grid-cols-2 md:!grid-cols-3\">","        {event.images?.map((image, index) => (","          <ImageListItem key={image.id} className=\"relative\">","            <Paper ","              elevation={2} ","              className=\"h-full\"","              sx={{","                '&:hover .image-controls': {","                  opacity: 1,","                },","              }}","            >","              <div className=\"relative\">","                <img","                  src={image.image_url}","                  alt={image.caption || 'Event image'}","                  className=\"w-full h-full object-cover aspect-[4/3] cursor-pointer\"","                  onClick={() => handleImageClick(image, index)}","                />","                {isAdmin && (","                  <div className=\"image-controls absolute bottom-0 left-0 right-0 bg-black/50 p-2 opacity-0 transition-opacity duration-200\">","                    <div className=\"flex justify-between items-center\">","                      <div className=\"flex gap-1\">","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'left')}","                          disabled={index === 0}","                          className=\"!bg-white hover:!bg-gray-200\"","                        >","                          <MoveLeft className=\"w-4 h-4\" />","                        </IconButton>","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'right')}","                          disabled={index === event.images.length - 1}","                          className=\"!bg-white hover:!bg-gray-200\"","                        >","                          <MoveRight className=\"w-4 h-4\" />","                        </IconButton>","                      </div>","                      <IconButton","                        size=\"small\"","                        onClick={() => handleDeleteImage(image.id)}","                        className=\"!bg-red-500 hover:!bg-red-600 !text-white\"","                      >","                        <Trash2 className=\"w-4 h-4\" />","                      </IconButton>","                    </div>","                  </div>","                )}","              </div>","            </Paper>","          </ImageListItem>","        ))}","      </ImageList>","","      <Dialog","        open={!!selectedImage}","        onClose={handleClose}","        maxWidth=\"md\"","        fullWidth={false}","        PaperProps={{","          sx: {","            m: 0,","            maxWidth: '800px',","            width: '90%',","            bgcolor: 'background.paper',","          }","        }}","      >","        <Box sx={{ position: 'relative' }}>","          <IconButton","            onClick={handleClose}","            sx={{","              position: 'absolute',","              right: 8,","              top: 8,","              zIndex: 1,","              bgcolor: 'background.paper',","              '&:hover': { bgcolor: 'action.hover' }","            }}","          >","            <CloseIcon />","          </IconButton>","          ","          <img","            src={selectedImage?.image_url}","            alt={selectedImage?.caption || 'Event image'}","            style={{","              width: '100%',","              height: 'auto',","              maxHeight: '80vh',","              objectFit: 'contain'","            }}","          />","","          {event.images?.length > 1 && (","            <Box sx={{ ","              position: 'absolute', ","              bottom: 16, ","              left: 0, ","              right: 0, ","              display: 'flex', ","              justifyContent: 'space-between', ","              px: 2 ","            }}>","              <IconButton","                onClick={handlePrevious}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronLeft />","              </IconButton>","              <IconButton","                onClick={handleNext}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronRight />","              </IconButton>","            </Box>","          )}","        </Box>","      </Dialog>","    </div>","  );","};","","export default EventGallery;"],"id":14},{"start":{"row":0,"column":0},"end":{"row":286,"column":28},"action":"insert","lines":["import { useState } from 'react';","import {","  ImageList,","  ImageListItem,","  IconButton,","  Dialog,","  Button,","  Box,","  Alert,","  Paper","} from '@mui/material';","import {","  X as CloseIcon,","  ChevronLeft,","  ChevronRight,","  Trash2,","  Upload,","  MoveLeft,","  MoveRight","} from 'lucide-react';","import axios from '../utils/axios';","","const EventGallery = ({ event, isAdmin, onImagesChange }) => {","  const [selectedImage, setSelectedImage] = useState(null);","  const [error, setError] = useState(null);","  const [uploadingImages, setUploadingImages] = useState(false);","  const [images, setImages] = useState(event.images || []);","","  const handleImageClick = (image, index) => {","    setSelectedImage({ ...image, index });","  };","","  const handleClose = () => {","    setSelectedImage(null);","  };","","  const handlePrevious = () => {","    const newIndex = (selectedImage.index - 1 + images.length) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleNext = () => {","    const newIndex = (selectedImage.index + 1) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleMoveImage = async (imageId, direction) => {","    try {","      setError(null);","      const response = await axios.post(","        `/api/events/${event.url_name}/reorder_images/`,","        {","          image_id: imageId,","          direction: direction","        }","      );","      ","      // Update local state with the new order from the response","      if (response.data?.images) {","        setImages(response.data.images);","      }","      ","      // Refresh parent component","      onImagesChange();","    } catch (err) {","      console.error('Failed to reorder images:', err);","      setError(err.response?.data?.detail || 'Failed to reorder images');","    }","  };","","  const handleFileSelect = async (e) => {","    const files = Array.from(e.target.files);","    if (files.length === 0) return;","","    setUploadingImages(true);","    setError(null);","","    const formData = new FormData();","    files.forEach(file => {","      formData.append('images', file);","    });","","    try {","      const response = await axios.post(","        `/api/events/${event.url_name}/upload_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      setImages([...images, ...response.data]);","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to upload images');","    } finally {","      setUploadingImages(false);","      // Reset file input","      e.target.value = '';","    }","  };","","  const handleDeleteImage = async (imageId) => {","    if (!window.confirm('Are you sure you want to delete this image?')) return;","","    setError(null);","","    try {","      await axios.post(","        `/api/events/${event.url_name}/delete_image/`,","        { image_id: imageId }","      );","      ","      // Update local state","      setImages(images.filter(img => img.id !== imageId));","      ","      // Close lightbox if the deleted image was selected","      if (selectedImage?.id === imageId) {","        setSelectedImage(null);","      }","      ","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to delete image');","    }","  };","","  return (","    <div className=\"w-full\">","      {error && (","        <Alert severity=\"error\" className=\"mb-4\">","          {error}","        </Alert>","      )}","","      {isAdmin && (","        <Box className=\"mb-4\">","          <input","            type=\"file\"","            id=\"image-upload\"","            multiple","            accept=\"image/*\"","            className=\"hidden\"","            onChange={handleFileSelect}","          />","          <label htmlFor=\"image-upload\">","            <Button","              variant=\"contained\"","              component=\"span\"","              disabled={uploadingImages}","              startIcon={<Upload className=\"w-4 h-4\" />}","            >","              {uploadingImages ? 'Uploading...' : 'Upload Images'}","            </Button>","          </label>","        </Box>","      )}","","      <ImageList cols={3} gap={8} className=\"!grid-cols-1 sm:!grid-cols-2 md:!grid-cols-3\">","        {images.map((image, index) => (","          <ImageListItem key={image.id} className=\"relative\">","            <Paper ","              elevation={2} ","              className=\"h-full\"","              sx={{","                '&:hover .image-controls': {","                  opacity: 1,","                },","              }}","            >","              <div className=\"relative\">","                <img","                  src={image.image_url}","                  alt={image.caption || 'Event image'}","                  className=\"w-full h-full object-cover aspect-[4/3] cursor-pointer\"","                  onClick={() => handleImageClick(image, index)}","                />","                {isAdmin && (","                  <div className=\"image-controls absolute bottom-0 left-0 right-0 bg-black/50 p-2 opacity-0 transition-opacity duration-200\">","                    <div className=\"flex justify-between items-center\">","                      <div className=\"flex gap-1\">","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'left')}","                          disabled={index === 0}","                          className=\"!bg-white hover:!bg-gray-200\"","                        >","                          <MoveLeft className=\"w-4 h-4\" />","                        </IconButton>","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'right')}","                          disabled={index === images.length - 1}","                          className=\"!bg-white hover:!bg-gray-200\"","                        >","                          <MoveRight className=\"w-4 h-4\" />","                        </IconButton>","                      </div>","                      <IconButton","                        size=\"small\"","                        onClick={() => handleDeleteImage(image.id)}","                        className=\"!bg-red-500 hover:!bg-red-600 !text-white\"","                      >","                        <Trash2 className=\"w-4 h-4\" />","                      </IconButton>","                    </div>","                  </div>","                )}","              </div>","            </Paper>","          </ImageListItem>","        ))}","      </ImageList>","","      {/* Image Lightbox */}","      <Dialog","        open={!!selectedImage}","        onClose={handleClose}","        maxWidth=\"md\"","        fullWidth={false}","        PaperProps={{","          sx: {","            m: 0,","            maxWidth: '800px',","            width: '90%',","            bgcolor: 'background.paper',","          }","        }}","      >","        <Box sx={{ position: 'relative' }}>","          <IconButton","            onClick={handleClose}","            sx={{","              position: 'absolute',","              right: 8,","              top: 8,","              zIndex: 1,","              bgcolor: 'background.paper',","              '&:hover': { bgcolor: 'action.hover' }","            }}","          >","            <CloseIcon />","          </IconButton>","          ","          <img","            src={selectedImage?.image_url}","            alt={selectedImage?.caption || 'Event image'}","            style={{","              width: '100%',","              height: 'auto',","              maxHeight: '80vh',","              objectFit: 'contain'","            }}","          />","","          {images.length > 1 && (","            <Box sx={{ ","              position: 'absolute', ","              bottom: 16, ","              left: 0, ","              right: 0, ","              display: 'flex', ","              justifyContent: 'space-between', ","              px: 2 ","            }}>","              <IconButton","                onClick={handlePrevious}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronLeft />","              </IconButton>","              <IconButton","                onClick={handleNext}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronRight />","              </IconButton>","            </Box>","          )}","        </Box>","      </Dialog>","    </div>","  );","};","","export default EventGallery;"]}],[{"start":{"row":46,"column":2},"end":{"row":68,"column":4},"action":"remove","lines":["const handleMoveImage = async (imageId, direction) => {","    try {","      setError(null);","      const response = await axios.post(","        `/api/events/${event.url_name}/reorder_images/`,","        {","          image_id: imageId,","          direction: direction","        }","      );","      ","      // Update local state with the new order from the response","      if (response.data?.images) {","        setImages(response.data.images);","      }","      ","      // Refresh parent component","      onImagesChange();","    } catch (err) {","      console.error('Failed to reorder images:', err);","      setError(err.response?.data?.detail || 'Failed to reorder images');","    }","  };"],"id":15},{"start":{"row":46,"column":2},"end":{"row":74,"column":2},"action":"insert","lines":["const handleMoveImage = async (imageId, direction) => {","  try {","    setError(null);","    const formData = new FormData();","    formData.append('image_id', imageId);","    formData.append('direction', direction);","","    const response = await axios.post(","      `/api/events/${event.url_name}/reorder_images/`,","      formData,","      {","        headers: {","          'Content-Type': 'multipart/form-data',","        },","      }","    );","    ","    // Update local state with the new order from the response","    if (response.data?.images) {","      setImages(response.data.images);","    }","    ","    // Refresh parent component","    onImagesChange();","  } catch (err) {","    console.error('Failed to reorder images:', err);","    setError(err.response?.data?.detail || 'Failed to reorder images');","  }","};"]}],[{"start":{"row":47,"column":0},"end":{"row":47,"column":4},"action":"insert","lines":["    "],"id":16},{"start":{"row":48,"column":0},"end":{"row":48,"column":4},"action":"insert","lines":["    "]},{"start":{"row":49,"column":0},"end":{"row":49,"column":4},"action":"insert","lines":["    "]},{"start":{"row":50,"column":0},"end":{"row":50,"column":4},"action":"insert","lines":["    "]},{"start":{"row":51,"column":0},"end":{"row":51,"column":4},"action":"insert","lines":["    "]},{"start":{"row":52,"column":0},"end":{"row":52,"column":4},"action":"insert","lines":["    "]},{"start":{"row":53,"column":0},"end":{"row":53,"column":4},"action":"insert","lines":["    "]},{"start":{"row":54,"column":0},"end":{"row":54,"column":4},"action":"insert","lines":["    "]},{"start":{"row":55,"column":0},"end":{"row":55,"column":4},"action":"insert","lines":["    "]},{"start":{"row":56,"column":0},"end":{"row":56,"column":4},"action":"insert","lines":["    "]},{"start":{"row":57,"column":0},"end":{"row":57,"column":4},"action":"insert","lines":["    "]},{"start":{"row":58,"column":0},"end":{"row":58,"column":4},"action":"insert","lines":["    "]},{"start":{"row":59,"column":0},"end":{"row":59,"column":4},"action":"insert","lines":["    "]},{"start":{"row":60,"column":0},"end":{"row":60,"column":4},"action":"insert","lines":["    "]},{"start":{"row":61,"column":0},"end":{"row":61,"column":4},"action":"insert","lines":["    "]},{"start":{"row":62,"column":0},"end":{"row":62,"column":4},"action":"insert","lines":["    "]},{"start":{"row":63,"column":0},"end":{"row":63,"column":4},"action":"insert","lines":["    "]},{"start":{"row":64,"column":0},"end":{"row":64,"column":4},"action":"insert","lines":["    "]},{"start":{"row":65,"column":0},"end":{"row":65,"column":4},"action":"insert","lines":["    "]},{"start":{"row":66,"column":0},"end":{"row":66,"column":4},"action":"insert","lines":["    "]},{"start":{"row":67,"column":0},"end":{"row":67,"column":4},"action":"insert","lines":["    "]},{"start":{"row":68,"column":0},"end":{"row":68,"column":4},"action":"insert","lines":["    "]},{"start":{"row":69,"column":0},"end":{"row":69,"column":4},"action":"insert","lines":["    "]},{"start":{"row":70,"column":0},"end":{"row":70,"column":4},"action":"insert","lines":["    "]},{"start":{"row":71,"column":0},"end":{"row":71,"column":4},"action":"insert","lines":["    "]},{"start":{"row":72,"column":0},"end":{"row":72,"column":4},"action":"insert","lines":["    "]},{"start":{"row":73,"column":0},"end":{"row":73,"column":4},"action":"insert","lines":["    "]},{"start":{"row":74,"column":0},"end":{"row":74,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":0,"column":0},"end":{"row":292,"column":28},"action":"remove","lines":["import { useState } from 'react';","import {","  ImageList,","  ImageListItem,","  IconButton,","  Dialog,","  Button,","  Box,","  Alert,","  Paper","} from '@mui/material';","import {","  X as CloseIcon,","  ChevronLeft,","  ChevronRight,","  Trash2,","  Upload,","  MoveLeft,","  MoveRight","} from 'lucide-react';","import axios from '../utils/axios';","","const EventGallery = ({ event, isAdmin, onImagesChange }) => {","  const [selectedImage, setSelectedImage] = useState(null);","  const [error, setError] = useState(null);","  const [uploadingImages, setUploadingImages] = useState(false);","  const [images, setImages] = useState(event.images || []);","","  const handleImageClick = (image, index) => {","    setSelectedImage({ ...image, index });","  };","","  const handleClose = () => {","    setSelectedImage(null);","  };","","  const handlePrevious = () => {","    const newIndex = (selectedImage.index - 1 + images.length) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleNext = () => {","    const newIndex = (selectedImage.index + 1) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleMoveImage = async (imageId, direction) => {","      try {","        setError(null);","        const formData = new FormData();","        formData.append('image_id', imageId);","        formData.append('direction', direction);","    ","        const response = await axios.post(","          `/api/events/${event.url_name}/reorder_images/`,","          formData,","          {","            headers: {","              'Content-Type': 'multipart/form-data',","            },","          }","        );","        ","        // Update local state with the new order from the response","        if (response.data?.images) {","          setImages(response.data.images);","        }","        ","        // Refresh parent component","        onImagesChange();","      } catch (err) {","        console.error('Failed to reorder images:', err);","        setError(err.response?.data?.detail || 'Failed to reorder images');","      }","    };","","  const handleFileSelect = async (e) => {","    const files = Array.from(e.target.files);","    if (files.length === 0) return;","","    setUploadingImages(true);","    setError(null);","","    const formData = new FormData();","    files.forEach(file => {","      formData.append('images', file);","    });","","    try {","      const response = await axios.post(","        `/api/events/${event.url_name}/upload_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      setImages([...images, ...response.data]);","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to upload images');","    } finally {","      setUploadingImages(false);","      // Reset file input","      e.target.value = '';","    }","  };","","  const handleDeleteImage = async (imageId) => {","    if (!window.confirm('Are you sure you want to delete this image?')) return;","","    setError(null);","","    try {","      await axios.post(","        `/api/events/${event.url_name}/delete_image/`,","        { image_id: imageId }","      );","      ","      // Update local state","      setImages(images.filter(img => img.id !== imageId));","      ","      // Close lightbox if the deleted image was selected","      if (selectedImage?.id === imageId) {","        setSelectedImage(null);","      }","      ","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to delete image');","    }","  };","","  return (","    <div className=\"w-full\">","      {error && (","        <Alert severity=\"error\" className=\"mb-4\">","          {error}","        </Alert>","      )}","","      {isAdmin && (","        <Box className=\"mb-4\">","          <input","            type=\"file\"","            id=\"image-upload\"","            multiple","            accept=\"image/*\"","            className=\"hidden\"","            onChange={handleFileSelect}","          />","          <label htmlFor=\"image-upload\">","            <Button","              variant=\"contained\"","              component=\"span\"","              disabled={uploadingImages}","              startIcon={<Upload className=\"w-4 h-4\" />}","            >","              {uploadingImages ? 'Uploading...' : 'Upload Images'}","            </Button>","          </label>","        </Box>","      )}","","      <ImageList cols={3} gap={8} className=\"!grid-cols-1 sm:!grid-cols-2 md:!grid-cols-3\">","        {images.map((image, index) => (","          <ImageListItem key={image.id} className=\"relative\">","            <Paper ","              elevation={2} ","              className=\"h-full\"","              sx={{","                '&:hover .image-controls': {","                  opacity: 1,","                },","              }}","            >","              <div className=\"relative\">","                <img","                  src={image.image_url}","                  alt={image.caption || 'Event image'}","                  className=\"w-full h-full object-cover aspect-[4/3] cursor-pointer\"","                  onClick={() => handleImageClick(image, index)}","                />","                {isAdmin && (","                  <div className=\"image-controls absolute bottom-0 left-0 right-0 bg-black/50 p-2 opacity-0 transition-opacity duration-200\">","                    <div className=\"flex justify-between items-center\">","                      <div className=\"flex gap-1\">","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'left')}","                          disabled={index === 0}","                          className=\"!bg-white hover:!bg-gray-200\"","                        >","                          <MoveLeft className=\"w-4 h-4\" />","                        </IconButton>","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'right')}","                          disabled={index === images.length - 1}","                          className=\"!bg-white hover:!bg-gray-200\"","                        >","                          <MoveRight className=\"w-4 h-4\" />","                        </IconButton>","                      </div>","                      <IconButton","                        size=\"small\"","                        onClick={() => handleDeleteImage(image.id)}","                        className=\"!bg-red-500 hover:!bg-red-600 !text-white\"","                      >","                        <Trash2 className=\"w-4 h-4\" />","                      </IconButton>","                    </div>","                  </div>","                )}","              </div>","            </Paper>","          </ImageListItem>","        ))}","      </ImageList>","","      {/* Image Lightbox */}","      <Dialog","        open={!!selectedImage}","        onClose={handleClose}","        maxWidth=\"md\"","        fullWidth={false}","        PaperProps={{","          sx: {","            m: 0,","            maxWidth: '800px',","            width: '90%',","            bgcolor: 'background.paper',","          }","        }}","      >","        <Box sx={{ position: 'relative' }}>","          <IconButton","            onClick={handleClose}","            sx={{","              position: 'absolute',","              right: 8,","              top: 8,","              zIndex: 1,","              bgcolor: 'background.paper',","              '&:hover': { bgcolor: 'action.hover' }","            }}","          >","            <CloseIcon />","          </IconButton>","          ","          <img","            src={selectedImage?.image_url}","            alt={selectedImage?.caption || 'Event image'}","            style={{","              width: '100%',","              height: 'auto',","              maxHeight: '80vh',","              objectFit: 'contain'","            }}","          />","","          {images.length > 1 && (","            <Box sx={{ ","              position: 'absolute', ","              bottom: 16, ","              left: 0, ","              right: 0, ","              display: 'flex', ","              justifyContent: 'space-between', ","              px: 2 ","            }}>","              <IconButton","                onClick={handlePrevious}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronLeft />","              </IconButton>","              <IconButton","                onClick={handleNext}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronRight />","              </IconButton>","            </Box>","          )}","        </Box>","      </Dialog>","    </div>","  );","};","","export default EventGallery;"],"id":17},{"start":{"row":0,"column":0},"end":{"row":324,"column":28},"action":"insert","lines":["import { useState } from 'react';","import {","  ImageList,","  ImageListItem,","  IconButton,","  Dialog,","  Button,","  Box,","  Alert,","  Paper","} from '@mui/material';","import {","  X as CloseIcon,","  ChevronLeft,","  ChevronRight,","  Trash2,","  Upload,","  MoveLeft,","  MoveRight","} from 'lucide-react';","import axios from '../utils/axios';","","const EventGallery = ({ event, isAdmin, onImagesChange }) => {","  const [selectedImage, setSelectedImage] = useState(null);","  const [error, setError] = useState(null);","  const [uploadingImages, setUploadingImages] = useState(false);","  const [images, setImages] = useState(event.images || []);","","  const handleImageClick = (image, index) => {","    setSelectedImage({ ...image, index });","  };","","  const handleClose = () => {","    setSelectedImage(null);","  };","","  const handlePrevious = () => {","    const newIndex = (selectedImage.index - 1 + images.length) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleNext = () => {","    const newIndex = (selectedImage.index + 1) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleMoveImage = async (imageId, direction) => {","    try {","      setError(null);","      const currentIndex = images.findIndex(img => img.id === imageId);","      if (currentIndex === -1) return;","","      let newIndex;","      if (direction === 'left' && currentIndex > 0) {","        newIndex = currentIndex - 1;","      } else if (direction === 'right' && currentIndex < images.length - 1) {","        newIndex = currentIndex + 1;","      } else {","        return; // Invalid move","      }","","      // Update local state immediately for smooth UI","      const newImages = [...images];","      const [movedImage] = newImages.splice(currentIndex, 1);","      newImages.splice(newIndex, 0, movedImage);","      setImages(newImages);","","      // Send request to backend","      const formData = new FormData();","      formData.append('image_id', imageId);","      formData.append('direction', direction);","","      await axios.post(","        `/api/events/${event.url_name}/reorder_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      ","      // Refresh parent component","      onImagesChange();","    } catch (err) {","      console.error('Failed to reorder images:', err);","      setError(err.response?.data?.detail || 'Failed to reorder images');","      ","      // Revert local state on error","      setImages(event.images || []);","    }","  };","","  const handleFileSelect = async (e) => {","    const files = Array.from(e.target.files);","    if (files.length === 0) return;","","    setUploadingImages(true);","    setError(null);","","    const formData = new FormData();","    files.forEach(file => {","      formData.append('images', file);","    });","","    try {","      const response = await axios.post(","        `/api/events/${event.url_name}/upload_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      setImages([...images, ...response.data]);","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to upload images');","    } finally {","      setUploadingImages(false);","      e.target.value = '';","    }","  };","","  const handleDeleteImage = async (imageId) => {","    if (!window.confirm('Are you sure you want to delete this image?')) return;","","    setError(null);","","    try {","      const formData = new FormData();","      formData.append('image_id', imageId);","","      await axios.post(","        `/api/events/${event.url_name}/delete_image/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      ","      setImages(images.filter(img => img.id !== imageId));","      ","      if (selectedImage?.id === imageId) {","        setSelectedImage(null);","      }","      ","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to delete image');","    }","  };","","  // Update local state when event images change","  useEffect(() => {","    setImages(event.images || []);","  }, [event.images]);","","  return (","    <div className=\"w-full\">","      {error && (","        <Alert severity=\"error\" className=\"mb-4\">","          {error}","        </Alert>","      )}","","      {isAdmin && (","        <Box className=\"mb-4\">","          <input","            type=\"file\"","            id=\"image-upload\"","            multiple","            accept=\"image/*\"","            className=\"hidden\"","            onChange={handleFileSelect}","          />","          <label htmlFor=\"image-upload\">","            <Button","              variant=\"contained\"","              component=\"span\"","              disabled={uploadingImages}","              startIcon={<Upload className=\"w-4 h-4\" />}","            >","              {uploadingImages ? 'Uploading...' : 'Upload Images'}","            </Button>","          </label>","        </Box>","      )}","","      <ImageList cols={3} gap={8} className=\"!grid-cols-1 sm:!grid-cols-2 md:!grid-cols-3\">","        {images.map((image, index) => (","          <ImageListItem ","            key={image.id} ","            className=\"relative\"","            sx={{","              transition: 'transform 0.3s ease',","            }}","          >","            <Paper ","              elevation={2} ","              className=\"h-full\"","              sx={{","                '&:hover .image-controls': {","                  opacity: 1,","                },","              }}","            >","              <div className=\"relative\">","                <img","                  src={image.image_url}","                  alt={image.caption || 'Event image'}","                  className=\"w-full h-full object-cover aspect-[4/3] cursor-pointer\"","                  onClick={() => handleImageClick(image, index)}","                />","                {isAdmin && (","                  <div className=\"image-controls absolute bottom-0 left-0 right-0 bg-black/50 p-2 opacity-0 transition-opacity duration-200\">","                    <div className=\"flex justify-between items-center\">","                      <div className=\"flex gap-1\">","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'left')}","                          disabled={index === 0}","                          className=\"!bg-white hover:!bg-gray-200\"","                        >","                          <MoveLeft className=\"w-4 h-4\" />","                        </IconButton>","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'right')}","                          disabled={index === images.length - 1}","                          className=\"!bg-white hover:!bg-gray-200\"","                        >","                          <MoveRight className=\"w-4 h-4\" />","                        </IconButton>","                      </div>","                      <IconButton","                        size=\"small\"","                        onClick={() => handleDeleteImage(image.id)}","                        className=\"!bg-red-500 hover:!bg-red-600 !text-white\"","                      >","                        <Trash2 className=\"w-4 h-4\" />","                      </IconButton>","                    </div>","                  </div>","                )}","              </div>","            </Paper>","          </ImageListItem>","        ))}","      </ImageList>","","      <Dialog","        open={!!selectedImage}","        onClose={handleClose}","        maxWidth=\"md\"","        fullWidth={false}","        PaperProps={{","          sx: {","            m: 0,","            maxWidth: '800px',","            width: '90%',","            bgcolor: 'background.paper',","          }","        }}","      >","        <Box sx={{ position: 'relative' }}>","          <IconButton","            onClick={handleClose}","            sx={{","              position: 'absolute',","              right: 8,","              top: 8,","              zIndex: 1,","              bgcolor: 'background.paper',","              '&:hover': { bgcolor: 'action.hover' }","            }}","          >","            <CloseIcon />","          </IconButton>","          ","          <img","            src={selectedImage?.image_url}","            alt={selectedImage?.caption || 'Event image'}","            style={{","              width: '100%',","              height: 'auto',","              maxHeight: '80vh',","              objectFit: 'contain'","            }}","          />","","          {images.length > 1 && (","            <Box sx={{ ","              position: 'absolute', ","              bottom: 16, ","              left: 0, ","              right: 0, ","              display: 'flex', ","              justifyContent: 'space-between', ","              px: 2 ","            }}>","              <IconButton","                onClick={handlePrevious}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronLeft />","              </IconButton>","              <IconButton","                onClick={handleNext}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronRight />","              </IconButton>","            </Box>","          )}","        </Box>","      </Dialog>","    </div>","  );","};","","export default EventGallery;"]}],[{"start":{"row":0,"column":0},"end":{"row":20,"column":35},"action":"remove","lines":["import { useState } from 'react';","import {","  ImageList,","  ImageListItem,","  IconButton,","  Dialog,","  Button,","  Box,","  Alert,","  Paper","} from '@mui/material';","import {","  X as CloseIcon,","  ChevronLeft,","  ChevronRight,","  Trash2,","  Upload,","  MoveLeft,","  MoveRight","} from 'lucide-react';","import axios from '../utils/axios';"],"id":18},{"start":{"row":0,"column":0},"end":{"row":20,"column":35},"action":"insert","lines":["import { useState, useEffect } from 'react';","import {","  ImageList,","  ImageListItem,","  IconButton,","  Dialog,","  Button,","  Box,","  Alert,","  Paper","} from '@mui/material';","import {","  X as CloseIcon,","  ChevronLeft,","  ChevronRight,","  Trash2,","  Upload,","  MoveLeft,","  MoveRight","} from 'lucide-react';","import axios from '../utils/axios';"]}],[{"start":{"row":0,"column":0},"end":{"row":324,"column":28},"action":"remove","lines":["import { useState, useEffect } from 'react';","import {","  ImageList,","  ImageListItem,","  IconButton,","  Dialog,","  Button,","  Box,","  Alert,","  Paper","} from '@mui/material';","import {","  X as CloseIcon,","  ChevronLeft,","  ChevronRight,","  Trash2,","  Upload,","  MoveLeft,","  MoveRight","} from 'lucide-react';","import axios from '../utils/axios';","","const EventGallery = ({ event, isAdmin, onImagesChange }) => {","  const [selectedImage, setSelectedImage] = useState(null);","  const [error, setError] = useState(null);","  const [uploadingImages, setUploadingImages] = useState(false);","  const [images, setImages] = useState(event.images || []);","","  const handleImageClick = (image, index) => {","    setSelectedImage({ ...image, index });","  };","","  const handleClose = () => {","    setSelectedImage(null);","  };","","  const handlePrevious = () => {","    const newIndex = (selectedImage.index - 1 + images.length) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleNext = () => {","    const newIndex = (selectedImage.index + 1) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleMoveImage = async (imageId, direction) => {","    try {","      setError(null);","      const currentIndex = images.findIndex(img => img.id === imageId);","      if (currentIndex === -1) return;","","      let newIndex;","      if (direction === 'left' && currentIndex > 0) {","        newIndex = currentIndex - 1;","      } else if (direction === 'right' && currentIndex < images.length - 1) {","        newIndex = currentIndex + 1;","      } else {","        return; // Invalid move","      }","","      // Update local state immediately for smooth UI","      const newImages = [...images];","      const [movedImage] = newImages.splice(currentIndex, 1);","      newImages.splice(newIndex, 0, movedImage);","      setImages(newImages);","","      // Send request to backend","      const formData = new FormData();","      formData.append('image_id', imageId);","      formData.append('direction', direction);","","      await axios.post(","        `/api/events/${event.url_name}/reorder_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      ","      // Refresh parent component","      onImagesChange();","    } catch (err) {","      console.error('Failed to reorder images:', err);","      setError(err.response?.data?.detail || 'Failed to reorder images');","      ","      // Revert local state on error","      setImages(event.images || []);","    }","  };","","  const handleFileSelect = async (e) => {","    const files = Array.from(e.target.files);","    if (files.length === 0) return;","","    setUploadingImages(true);","    setError(null);","","    const formData = new FormData();","    files.forEach(file => {","      formData.append('images', file);","    });","","    try {","      const response = await axios.post(","        `/api/events/${event.url_name}/upload_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      setImages([...images, ...response.data]);","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to upload images');","    } finally {","      setUploadingImages(false);","      e.target.value = '';","    }","  };","","  const handleDeleteImage = async (imageId) => {","    if (!window.confirm('Are you sure you want to delete this image?')) return;","","    setError(null);","","    try {","      const formData = new FormData();","      formData.append('image_id', imageId);","","      await axios.post(","        `/api/events/${event.url_name}/delete_image/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      ","      setImages(images.filter(img => img.id !== imageId));","      ","      if (selectedImage?.id === imageId) {","        setSelectedImage(null);","      }","      ","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to delete image');","    }","  };","","  // Update local state when event images change","  useEffect(() => {","    setImages(event.images || []);","  }, [event.images]);","","  return (","    <div className=\"w-full\">","      {error && (","        <Alert severity=\"error\" className=\"mb-4\">","          {error}","        </Alert>","      )}","","      {isAdmin && (","        <Box className=\"mb-4\">","          <input","            type=\"file\"","            id=\"image-upload\"","            multiple","            accept=\"image/*\"","            className=\"hidden\"","            onChange={handleFileSelect}","          />","          <label htmlFor=\"image-upload\">","            <Button","              variant=\"contained\"","              component=\"span\"","              disabled={uploadingImages}","              startIcon={<Upload className=\"w-4 h-4\" />}","            >","              {uploadingImages ? 'Uploading...' : 'Upload Images'}","            </Button>","          </label>","        </Box>","      )}","","      <ImageList cols={3} gap={8} className=\"!grid-cols-1 sm:!grid-cols-2 md:!grid-cols-3\">","        {images.map((image, index) => (","          <ImageListItem ","            key={image.id} ","            className=\"relative\"","            sx={{","              transition: 'transform 0.3s ease',","            }}","          >","            <Paper ","              elevation={2} ","              className=\"h-full\"","              sx={{","                '&:hover .image-controls': {","                  opacity: 1,","                },","              }}","            >","              <div className=\"relative\">","                <img","                  src={image.image_url}","                  alt={image.caption || 'Event image'}","                  className=\"w-full h-full object-cover aspect-[4/3] cursor-pointer\"","                  onClick={() => handleImageClick(image, index)}","                />","                {isAdmin && (","                  <div className=\"image-controls absolute bottom-0 left-0 right-0 bg-black/50 p-2 opacity-0 transition-opacity duration-200\">","                    <div className=\"flex justify-between items-center\">","                      <div className=\"flex gap-1\">","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'left')}","                          disabled={index === 0}","                          className=\"!bg-white hover:!bg-gray-200\"","                        >","                          <MoveLeft className=\"w-4 h-4\" />","                        </IconButton>","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'right')}","                          disabled={index === images.length - 1}","                          className=\"!bg-white hover:!bg-gray-200\"","                        >","                          <MoveRight className=\"w-4 h-4\" />","                        </IconButton>","                      </div>","                      <IconButton","                        size=\"small\"","                        onClick={() => handleDeleteImage(image.id)}","                        className=\"!bg-red-500 hover:!bg-red-600 !text-white\"","                      >","                        <Trash2 className=\"w-4 h-4\" />","                      </IconButton>","                    </div>","                  </div>","                )}","              </div>","            </Paper>","          </ImageListItem>","        ))}","      </ImageList>","","      <Dialog","        open={!!selectedImage}","        onClose={handleClose}","        maxWidth=\"md\"","        fullWidth={false}","        PaperProps={{","          sx: {","            m: 0,","            maxWidth: '800px',","            width: '90%',","            bgcolor: 'background.paper',","          }","        }}","      >","        <Box sx={{ position: 'relative' }}>","          <IconButton","            onClick={handleClose}","            sx={{","              position: 'absolute',","              right: 8,","              top: 8,","              zIndex: 1,","              bgcolor: 'background.paper',","              '&:hover': { bgcolor: 'action.hover' }","            }}","          >","            <CloseIcon />","          </IconButton>","          ","          <img","            src={selectedImage?.image_url}","            alt={selectedImage?.caption || 'Event image'}","            style={{","              width: '100%',","              height: 'auto',","              maxHeight: '80vh',","              objectFit: 'contain'","            }}","          />","","          {images.length > 1 && (","            <Box sx={{ ","              position: 'absolute', ","              bottom: 16, ","              left: 0, ","              right: 0, ","              display: 'flex', ","              justifyContent: 'space-between', ","              px: 2 ","            }}>","              <IconButton","                onClick={handlePrevious}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronLeft />","              </IconButton>","              <IconButton","                onClick={handleNext}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronRight />","              </IconButton>","            </Box>","          )}","        </Box>","      </Dialog>","    </div>","  );","};","","export default EventGallery;"],"id":19},{"start":{"row":0,"column":0},"end":{"row":325,"column":28},"action":"insert","lines":["import { useState, useEffect } from 'react';","import {","  ImageList,","  ImageListItem,","  IconButton,","  Dialog,","  Button,","  Box,","  Alert,","  Paper","} from '@mui/material';","import {","  X as CloseIcon,","  ChevronLeft,","  ChevronRight,","  Trash2,","  Upload,","  MoveLeft,","  MoveRight","} from 'lucide-react';","import axios from '../utils/axios';","","// Rest of the component code remains exactly the same","const EventGallery = ({ event, isAdmin, onImagesChange }) => {","  const [selectedImage, setSelectedImage] = useState(null);","  const [error, setError] = useState(null);","  const [uploadingImages, setUploadingImages] = useState(false);","  const [images, setImages] = useState(event.images || []);","","  const handleImageClick = (image, index) => {","    setSelectedImage({ ...image, index });","  };","","  const handleClose = () => {","    setSelectedImage(null);","  };","","  const handlePrevious = () => {","    const newIndex = (selectedImage.index - 1 + images.length) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleNext = () => {","    const newIndex = (selectedImage.index + 1) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleMoveImage = async (imageId, direction) => {","    try {","      setError(null);","      const currentIndex = images.findIndex(img => img.id === imageId);","      if (currentIndex === -1) return;","","      let newIndex;","      if (direction === 'left' && currentIndex > 0) {","        newIndex = currentIndex - 1;","      } else if (direction === 'right' && currentIndex < images.length - 1) {","        newIndex = currentIndex + 1;","      } else {","        return; // Invalid move","      }","","      // Update local state immediately for smooth UI","      const newImages = [...images];","      const [movedImage] = newImages.splice(currentIndex, 1);","      newImages.splice(newIndex, 0, movedImage);","      setImages(newImages);","","      // Send request to backend","      const formData = new FormData();","      formData.append('image_id', imageId);","      formData.append('direction', direction);","","      await axios.post(","        `/api/events/${event.url_name}/reorder_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      ","      // Refresh parent component","      onImagesChange();","    } catch (err) {","      console.error('Failed to reorder images:', err);","      setError(err.response?.data?.detail || 'Failed to reorder images');","      ","      // Revert local state on error","      setImages(event.images || []);","    }","  };","","  const handleFileSelect = async (e) => {","    const files = Array.from(e.target.files);","    if (files.length === 0) return;","","    setUploadingImages(true);","    setError(null);","","    const formData = new FormData();","    files.forEach(file => {","      formData.append('images', file);","    });","","    try {","      const response = await axios.post(","        `/api/events/${event.url_name}/upload_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      setImages([...images, ...response.data]);","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to upload images');","    } finally {","      setUploadingImages(false);","      e.target.value = '';","    }","  };","","  const handleDeleteImage = async (imageId) => {","    if (!window.confirm('Are you sure you want to delete this image?')) return;","","    setError(null);","","    try {","      const formData = new FormData();","      formData.append('image_id', imageId);","","      await axios.post(","        `/api/events/${event.url_name}/delete_image/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      ","      setImages(images.filter(img => img.id !== imageId));","      ","      if (selectedImage?.id === imageId) {","        setSelectedImage(null);","      }","      ","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to delete image');","    }","  };","","  // Update local state when event images change","  useEffect(() => {","    setImages(event.images || []);","  }, [event.images]);","","  return (","    <div className=\"w-full\">","      {error && (","        <Alert severity=\"error\" className=\"mb-4\">","          {error}","        </Alert>","      )}","","      {isAdmin && (","        <Box className=\"mb-4\">","          <input","            type=\"file\"","            id=\"image-upload\"","            multiple","            accept=\"image/*\"","            className=\"hidden\"","            onChange={handleFileSelect}","          />","          <label htmlFor=\"image-upload\">","            <Button","              variant=\"contained\"","              component=\"span\"","              disabled={uploadingImages}","              startIcon={<Upload className=\"w-4 h-4\" />}","            >","              {uploadingImages ? 'Uploading...' : 'Upload Images'}","            </Button>","          </label>","        </Box>","      )}","","      <ImageList cols={3} gap={8} className=\"!grid-cols-1 sm:!grid-cols-2 md:!grid-cols-3\">","        {images.map((image, index) => (","          <ImageListItem ","            key={image.id} ","            className=\"relative\"","            sx={{","              transition: 'transform 0.3s ease',","            }}","          >","            <Paper ","              elevation={2} ","              className=\"h-full\"","              sx={{","                '&:hover .image-controls': {","                  opacity: 1,","                },","              }}","            >","              <div className=\"relative\">","                <img","                  src={image.image_url}","                  alt={image.caption || 'Event image'}","                  className=\"w-full h-full object-cover aspect-[4/3] cursor-pointer\"","                  onClick={() => handleImageClick(image, index)}","                />","                {isAdmin && (","                  <div className=\"image-controls absolute bottom-0 left-0 right-0 bg-black/50 p-2 opacity-0 transition-opacity duration-200\">","                    <div className=\"flex justify-between items-center\">","                      <div className=\"flex gap-1\">","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'left')}","                          disabled={index === 0}","                          className=\"!bg-white hover:!bg-gray-200\"","                        >","                          <MoveLeft className=\"w-4 h-4\" />","                        </IconButton>","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'right')}","                          disabled={index === images.length - 1}","                          className=\"!bg-white hover:!bg-gray-200\"","                        >","                          <MoveRight className=\"w-4 h-4\" />","                        </IconButton>","                      </div>","                      <IconButton","                        size=\"small\"","                        onClick={() => handleDeleteImage(image.id)}","                        className=\"!bg-red-500 hover:!bg-red-600 !text-white\"","                      >","                        <Trash2 className=\"w-4 h-4\" />","                      </IconButton>","                    </div>","                  </div>","                )}","              </div>","            </Paper>","          </ImageListItem>","        ))}","      </ImageList>","","      <Dialog","        open={!!selectedImage}","        onClose={handleClose}","        maxWidth=\"md\"","        fullWidth={false}","        PaperProps={{","          sx: {","            m: 0,","            maxWidth: '800px',","            width: '90%',","            bgcolor: 'background.paper',","          }","        }}","      >","        <Box sx={{ position: 'relative' }}>","          <IconButton","            onClick={handleClose}","            sx={{","              position: 'absolute',","              right: 8,","              top: 8,","              zIndex: 1,","              bgcolor: 'background.paper',","              '&:hover': { bgcolor: 'action.hover' }","            }}","          >","            <CloseIcon />","          </IconButton>","          ","          <img","            src={selectedImage?.image_url}","            alt={selectedImage?.caption || 'Event image'}","            style={{","              width: '100%',","              height: 'auto',","              maxHeight: '80vh',","              objectFit: 'contain'","            }}","          />","","          {images.length > 1 && (","            <Box sx={{ ","              position: 'absolute', ","              bottom: 16, ","              left: 0, ","              right: 0, ","              display: 'flex', ","              justifyContent: 'space-between', ","              px: 2 ","            }}>","              <IconButton","                onClick={handlePrevious}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronLeft />","              </IconButton>","              <IconButton","                onClick={handleNext}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronRight />","              </IconButton>","            </Box>","          )}","        </Box>","      </Dialog>","    </div>","  );","};","","export default EventGallery;"]}],[{"start":{"row":0,"column":0},"end":{"row":92,"column":4},"action":"remove","lines":["import { useState, useEffect } from 'react';","import {","  ImageList,","  ImageListItem,","  IconButton,","  Dialog,","  Button,","  Box,","  Alert,","  Paper","} from '@mui/material';","import {","  X as CloseIcon,","  ChevronLeft,","  ChevronRight,","  Trash2,","  Upload,","  MoveLeft,","  MoveRight","} from 'lucide-react';","import axios from '../utils/axios';","","// Rest of the component code remains exactly the same","const EventGallery = ({ event, isAdmin, onImagesChange }) => {","  const [selectedImage, setSelectedImage] = useState(null);","  const [error, setError] = useState(null);","  const [uploadingImages, setUploadingImages] = useState(false);","  const [images, setImages] = useState(event.images || []);","","  const handleImageClick = (image, index) => {","    setSelectedImage({ ...image, index });","  };","","  const handleClose = () => {","    setSelectedImage(null);","  };","","  const handlePrevious = () => {","    const newIndex = (selectedImage.index - 1 + images.length) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleNext = () => {","    const newIndex = (selectedImage.index + 1) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleMoveImage = async (imageId, direction) => {","    try {","      setError(null);","      const currentIndex = images.findIndex(img => img.id === imageId);","      if (currentIndex === -1) return;","","      let newIndex;","      if (direction === 'left' && currentIndex > 0) {","        newIndex = currentIndex - 1;","      } else if (direction === 'right' && currentIndex < images.length - 1) {","        newIndex = currentIndex + 1;","      } else {","        return; // Invalid move","      }","","      // Update local state immediately for smooth UI","      const newImages = [...images];","      const [movedImage] = newImages.splice(currentIndex, 1);","      newImages.splice(newIndex, 0, movedImage);","      setImages(newImages);","","      // Send request to backend","      const formData = new FormData();","      formData.append('image_id', imageId);","      formData.append('direction', direction);","","      await axios.post(","        `/api/events/${event.url_name}/reorder_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      ","      // Refresh parent component","      onImagesChange();","    } catch (err) {","      console.error('Failed to reorder images:', err);","      setError(err.response?.data?.detail || 'Failed to reorder images');","      ","      // Revert local state on error","      setImages(event.images || []);","    }","  };"],"id":20},{"start":{"row":0,"column":0},"end":{"row":89,"column":4},"action":"insert","lines":["import { useState, useEffect } from 'react';","import {","  ImageList,","  ImageListItem,","  IconButton,","  Dialog,","  Button,","  Box,","  Alert,","  Paper,","  useTheme","} from '@mui/material';","import {","  X as CloseIcon,","  ChevronLeft,","  ChevronRight,","  Trash2,","  Upload,","  MoveLeft,","  MoveRight","} from 'lucide-react';","import axios from '../utils/axios';","","const EventGallery = ({ event, isAdmin, onImagesChange }) => {","  const theme = useTheme();","  const [selectedImage, setSelectedImage] = useState(null);","  const [error, setError] = useState(null);","  const [uploadingImages, setUploadingImages] = useState(false);","  const [images, setImages] = useState(event.images || []);","  const isDarkMode = theme.palette.mode === 'dark';","","  // Only update images from props if the length or order has changed","  useEffect(() => {","    if (!event.images) return;","    ","    const hasOrderChanged = event.images.some((img, idx) => {","      return !images[idx] || images[idx].id !== img.id;","    });","    ","    if (hasOrderChanged || event.images.length !== images.length) {","      setImages(event.images);","    }","  }, [event.images]); // eslint-disable-line react-hooks/exhaustive-deps","","  const handleMoveImage = async (imageId, direction) => {","    try {","      setError(null);","      const currentIndex = images.findIndex(img => img.id === imageId);","      if (currentIndex === -1) return;","","      let newIndex;","      if (direction === 'left' && currentIndex > 0) {","        newIndex = currentIndex - 1;","      } else if (direction === 'right' && currentIndex < images.length - 1) {","        newIndex = currentIndex + 1;","      } else {","        return; // Invalid move","      }","","      // Update local state immediately for smooth UI","      const newImages = [...images];","      const [movedImage] = newImages.splice(currentIndex, 1);","      newImages.splice(newIndex, 0, movedImage);","      setImages(newImages);","","      // Send request to backend","      const formData = new FormData();","      formData.append('image_id', imageId);","      formData.append('direction', direction);","","      await axios.post(","        `/api/events/${event.url_name}/reorder_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      ","      // Only refresh parent if the request was successful","      onImagesChange();","    } catch (err) {","      console.error('Failed to reorder images:', err);","      setError(err.response?.data?.detail || 'Failed to reorder images');","      ","      // Revert local state on error","      setImages(event.images || []);","    }","  };"]}],[{"start":{"row":190,"column":6},"end":{"row":250,"column":18},"action":"remove","lines":["<ImageList cols={3} gap={8} className=\"!grid-cols-1 sm:!grid-cols-2 md:!grid-cols-3\">","        {images.map((image, index) => (","          <ImageListItem ","            key={image.id} ","            className=\"relative\"","            sx={{","              transition: 'transform 0.3s ease',","            }}","          >","            <Paper ","              elevation={2} ","              className=\"h-full\"","              sx={{","                '&:hover .image-controls': {","                  opacity: 1,","                },","              }}","            >","              <div className=\"relative\">","                <img","                  src={image.image_url}","                  alt={image.caption || 'Event image'}","                  className=\"w-full h-full object-cover aspect-[4/3] cursor-pointer\"","                  onClick={() => handleImageClick(image, index)}","                />","                {isAdmin && (","                  <div className=\"image-controls absolute bottom-0 left-0 right-0 bg-black/50 p-2 opacity-0 transition-opacity duration-200\">","                    <div className=\"flex justify-between items-center\">","                      <div className=\"flex gap-1\">","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'left')}","                          disabled={index === 0}","                          className=\"!bg-white hover:!bg-gray-200\"","                        >","                          <MoveLeft className=\"w-4 h-4\" />","                        </IconButton>","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'right')}","                          disabled={index === images.length - 1}","                          className=\"!bg-white hover:!bg-gray-200\"","                        >","                          <MoveRight className=\"w-4 h-4\" />","                        </IconButton>","                      </div>","                      <IconButton","                        size=\"small\"","                        onClick={() => handleDeleteImage(image.id)}","                        className=\"!bg-red-500 hover:!bg-red-600 !text-white\"","                      >","                        <Trash2 className=\"w-4 h-4\" />","                      </IconButton>","                    </div>","                  </div>","                )}","              </div>","            </Paper>","          </ImageListItem>","        ))}","      </ImageList>"],"id":21},{"start":{"row":190,"column":6},"end":{"row":272,"column":18},"action":"insert","lines":["<ImageList cols={3} gap={8} className=\"!grid-cols-1 sm:!grid-cols-2 md:!grid-cols-3\">","        {images.map((image, index) => (","          <ImageListItem ","            key={image.id} ","            className=\"relative\"","            sx={{","              transition: 'all 0.3s ease-in-out',","            }}","          >","            <Paper ","              elevation={2} ","              className=\"h-full\"","              sx={{","                '&:hover .image-controls': {","                  opacity: 1,","                },","              }}","            >","              <div className=\"relative\">","                <img","                  src={image.image_url}","                  alt={image.caption || 'Event image'}","                  className=\"w-full h-full object-cover aspect-[4/3] cursor-pointer\"","                  onClick={() => handleImageClick(image, index)}","                />","                {isAdmin && (","                  <div className=\"image-controls absolute bottom-0 left-0 right-0 bg-black/50 p-2 opacity-0 transition-opacity duration-200\">","                    <div className=\"flex justify-between items-center\">","                      <div className=\"flex gap-1\">","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'left')}","                          disabled={index === 0}","                          sx={{","                            backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'white',","                            '&:hover': {","                              backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.7)' : '#f5f5f5',","                            },","                            '&.Mui-disabled': {","                              backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.3)' : '#e0e0e0',","                            }","                          }}","                        >","                          <MoveLeft className=\"w-4 h-4\" />","                        </IconButton>","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'right')}","                          disabled={index === images.length - 1}","                          sx={{","                            backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'white',","                            '&:hover': {","                              backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.7)' : '#f5f5f5',","                            },","                            '&.Mui-disabled': {","                              backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.3)' : '#e0e0e0',","                            }","                          }}","                        >","                          <MoveRight className=\"w-4 h-4\" />","                        </IconButton>","                      </div>","                      <IconButton","                        size=\"small\"","                        onClick={() => handleDeleteImage(image.id)}","                        sx={{","                          backgroundColor: 'rgb(239, 68, 68)',","                          color: 'white',","                          '&:hover': {","                            backgroundColor: 'rgb(220, 38, 38)',","                          }","                        }}","                      >","                        <Trash2 className=\"w-4 h-4\" />","                      </IconButton>","                    </div>","                  </div>","                )}","              </div>","            </Paper>","          </ImageListItem>","        ))}","      </ImageList>"]}],[{"start":{"row":0,"column":0},"end":{"row":344,"column":28},"action":"remove","lines":["import { useState, useEffect } from 'react';","import {","  ImageList,","  ImageListItem,","  IconButton,","  Dialog,","  Button,","  Box,","  Alert,","  Paper,","  useTheme","} from '@mui/material';","import {","  X as CloseIcon,","  ChevronLeft,","  ChevronRight,","  Trash2,","  Upload,","  MoveLeft,","  MoveRight","} from 'lucide-react';","import axios from '../utils/axios';","","const EventGallery = ({ event, isAdmin, onImagesChange }) => {","  const theme = useTheme();","  const [selectedImage, setSelectedImage] = useState(null);","  const [error, setError] = useState(null);","  const [uploadingImages, setUploadingImages] = useState(false);","  const [images, setImages] = useState(event.images || []);","  const isDarkMode = theme.palette.mode === 'dark';","","  // Only update images from props if the length or order has changed","  useEffect(() => {","    if (!event.images) return;","    ","    const hasOrderChanged = event.images.some((img, idx) => {","      return !images[idx] || images[idx].id !== img.id;","    });","    ","    if (hasOrderChanged || event.images.length !== images.length) {","      setImages(event.images);","    }","  }, [event.images]); // eslint-disable-line react-hooks/exhaustive-deps","","  const handleMoveImage = async (imageId, direction) => {","    try {","      setError(null);","      const currentIndex = images.findIndex(img => img.id === imageId);","      if (currentIndex === -1) return;","","      let newIndex;","      if (direction === 'left' && currentIndex > 0) {","        newIndex = currentIndex - 1;","      } else if (direction === 'right' && currentIndex < images.length - 1) {","        newIndex = currentIndex + 1;","      } else {","        return; // Invalid move","      }","","      // Update local state immediately for smooth UI","      const newImages = [...images];","      const [movedImage] = newImages.splice(currentIndex, 1);","      newImages.splice(newIndex, 0, movedImage);","      setImages(newImages);","","      // Send request to backend","      const formData = new FormData();","      formData.append('image_id', imageId);","      formData.append('direction', direction);","","      await axios.post(","        `/api/events/${event.url_name}/reorder_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      ","      // Only refresh parent if the request was successful","      onImagesChange();","    } catch (err) {","      console.error('Failed to reorder images:', err);","      setError(err.response?.data?.detail || 'Failed to reorder images');","      ","      // Revert local state on error","      setImages(event.images || []);","    }","  };","","  const handleFileSelect = async (e) => {","    const files = Array.from(e.target.files);","    if (files.length === 0) return;","","    setUploadingImages(true);","    setError(null);","","    const formData = new FormData();","    files.forEach(file => {","      formData.append('images', file);","    });","","    try {","      const response = await axios.post(","        `/api/events/${event.url_name}/upload_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      setImages([...images, ...response.data]);","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to upload images');","    } finally {","      setUploadingImages(false);","      e.target.value = '';","    }","  };","","  const handleDeleteImage = async (imageId) => {","    if (!window.confirm('Are you sure you want to delete this image?')) return;","","    setError(null);","","    try {","      const formData = new FormData();","      formData.append('image_id', imageId);","","      await axios.post(","        `/api/events/${event.url_name}/delete_image/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      ","      setImages(images.filter(img => img.id !== imageId));","      ","      if (selectedImage?.id === imageId) {","        setSelectedImage(null);","      }","      ","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to delete image');","    }","  };","","  // Update local state when event images change","  useEffect(() => {","    setImages(event.images || []);","  }, [event.images]);","","  return (","    <div className=\"w-full\">","      {error && (","        <Alert severity=\"error\" className=\"mb-4\">","          {error}","        </Alert>","      )}","","      {isAdmin && (","        <Box className=\"mb-4\">","          <input","            type=\"file\"","            id=\"image-upload\"","            multiple","            accept=\"image/*\"","            className=\"hidden\"","            onChange={handleFileSelect}","          />","          <label htmlFor=\"image-upload\">","            <Button","              variant=\"contained\"","              component=\"span\"","              disabled={uploadingImages}","              startIcon={<Upload className=\"w-4 h-4\" />}","            >","              {uploadingImages ? 'Uploading...' : 'Upload Images'}","            </Button>","          </label>","        </Box>","      )}","","      <ImageList cols={3} gap={8} className=\"!grid-cols-1 sm:!grid-cols-2 md:!grid-cols-3\">","        {images.map((image, index) => (","          <ImageListItem ","            key={image.id} ","            className=\"relative\"","            sx={{","              transition: 'all 0.3s ease-in-out',","            }}","          >","            <Paper ","              elevation={2} ","              className=\"h-full\"","              sx={{","                '&:hover .image-controls': {","                  opacity: 1,","                },","              }}","            >","              <div className=\"relative\">","                <img","                  src={image.image_url}","                  alt={image.caption || 'Event image'}","                  className=\"w-full h-full object-cover aspect-[4/3] cursor-pointer\"","                  onClick={() => handleImageClick(image, index)}","                />","                {isAdmin && (","                  <div className=\"image-controls absolute bottom-0 left-0 right-0 bg-black/50 p-2 opacity-0 transition-opacity duration-200\">","                    <div className=\"flex justify-between items-center\">","                      <div className=\"flex gap-1\">","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'left')}","                          disabled={index === 0}","                          sx={{","                            backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'white',","                            '&:hover': {","                              backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.7)' : '#f5f5f5',","                            },","                            '&.Mui-disabled': {","                              backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.3)' : '#e0e0e0',","                            }","                          }}","                        >","                          <MoveLeft className=\"w-4 h-4\" />","                        </IconButton>","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'right')}","                          disabled={index === images.length - 1}","                          sx={{","                            backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'white',","                            '&:hover': {","                              backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.7)' : '#f5f5f5',","                            },","                            '&.Mui-disabled': {","                              backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.3)' : '#e0e0e0',","                            }","                          }}","                        >","                          <MoveRight className=\"w-4 h-4\" />","                        </IconButton>","                      </div>","                      <IconButton","                        size=\"small\"","                        onClick={() => handleDeleteImage(image.id)}","                        sx={{","                          backgroundColor: 'rgb(239, 68, 68)',","                          color: 'white',","                          '&:hover': {","                            backgroundColor: 'rgb(220, 38, 38)',","                          }","                        }}","                      >","                        <Trash2 className=\"w-4 h-4\" />","                      </IconButton>","                    </div>","                  </div>","                )}","              </div>","            </Paper>","          </ImageListItem>","        ))}","      </ImageList>","","      <Dialog","        open={!!selectedImage}","        onClose={handleClose}","        maxWidth=\"md\"","        fullWidth={false}","        PaperProps={{","          sx: {","            m: 0,","            maxWidth: '800px',","            width: '90%',","            bgcolor: 'background.paper',","          }","        }}","      >","        <Box sx={{ position: 'relative' }}>","          <IconButton","            onClick={handleClose}","            sx={{","              position: 'absolute',","              right: 8,","              top: 8,","              zIndex: 1,","              bgcolor: 'background.paper',","              '&:hover': { bgcolor: 'action.hover' }","            }}","          >","            <CloseIcon />","          </IconButton>","          ","          <img","            src={selectedImage?.image_url}","            alt={selectedImage?.caption || 'Event image'}","            style={{","              width: '100%',","              height: 'auto',","              maxHeight: '80vh',","              objectFit: 'contain'","            }}","          />","","          {images.length > 1 && (","            <Box sx={{ ","              position: 'absolute', ","              bottom: 16, ","              left: 0, ","              right: 0, ","              display: 'flex', ","              justifyContent: 'space-between', ","              px: 2 ","            }}>","              <IconButton","                onClick={handlePrevious}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronLeft />","              </IconButton>","              <IconButton","                onClick={handleNext}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronRight />","              </IconButton>","            </Box>","          )}","        </Box>","      </Dialog>","    </div>","  );","};","","export default EventGallery;"],"id":22},{"start":{"row":0,"column":0},"end":{"row":357,"column":28},"action":"insert","lines":["import { useState, useEffect } from 'react';","import {","  ImageList,","  ImageListItem,","  IconButton,","  Dialog,","  Button,","  Box,","  Alert,","  Paper,","  useTheme","} from '@mui/material';","import {","  X as CloseIcon,","  ChevronLeft,","  ChevronRight,","  Trash2,","  Upload,","  MoveLeft,","  MoveRight","} from 'lucide-react';","import axios from '../utils/axios';","","const EventGallery = ({ event, isAdmin, onImagesChange }) => {","  const theme = useTheme();","  const [selectedImage, setSelectedImage] = useState(null);","  const [error, setError] = useState(null);","  const [uploadingImages, setUploadingImages] = useState(false);","  const [images, setImages] = useState(event.images || []);","  const isDarkMode = theme.palette.mode === 'dark';","","  // Only update images from props if the length or order has changed","  useEffect(() => {","    if (!event.images) return;","    ","    const hasOrderChanged = event.images.some((img, idx) => {","      return !images[idx] || images[idx].id !== img.id;","    });","    ","    if (hasOrderChanged || event.images.length !== images.length) {","      setImages(event.images);","    }","  }, [event.images]); // eslint-disable-line react-hooks/exhaustive-deps","","  const handleImageClick = (image, index) => {","    setSelectedImage({ ...image, index });","  };","","  const handleClose = () => {","    setSelectedImage(null);","  };","","  const handlePrevious = () => {","    const newIndex = (selectedImage.index - 1 + images.length) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleNext = () => {","    const newIndex = (selectedImage.index + 1) % images.length;","    setSelectedImage({ ...images[newIndex], index: newIndex });","  };","","  const handleMoveImage = async (imageId, direction) => {","    try {","      setError(null);","      const currentIndex = images.findIndex(img => img.id === imageId);","      if (currentIndex === -1) return;","","      let newIndex;","      if (direction === 'left' && currentIndex > 0) {","        newIndex = currentIndex - 1;","      } else if (direction === 'right' && currentIndex < images.length - 1) {","        newIndex = currentIndex + 1;","      } else {","        return; // Invalid move","      }","","      // Update local state immediately for smooth UI","      const newImages = [...images];","      const [movedImage] = newImages.splice(currentIndex, 1);","      newImages.splice(newIndex, 0, movedImage);","      setImages(newImages);","","      // Send request to backend","      const formData = new FormData();","      formData.append('image_id', imageId);","      formData.append('direction', direction);","","      await axios.post(","        `/api/events/${event.url_name}/reorder_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      ","      // Only refresh parent if the request was successful","      onImagesChange();","    } catch (err) {","      console.error('Failed to reorder images:', err);","      setError(err.response?.data?.detail || 'Failed to reorder images');","      ","      // Revert local state on error","      setImages(event.images || []);","    }","  };","","  const handleFileSelect = async (e) => {","    const files = Array.from(e.target.files);","    if (files.length === 0) return;","","    setUploadingImages(true);","    setError(null);","","    const formData = new FormData();","    files.forEach(file => {","      formData.append('images', file);","    });","","    try {","      const response = await axios.post(","        `/api/events/${event.url_name}/upload_images/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      setImages([...images, ...response.data]);","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to upload images');","    } finally {","      setUploadingImages(false);","      e.target.value = '';","    }","  };","","  const handleDeleteImage = async (imageId) => {","    if (!window.confirm('Are you sure you want to delete this image?')) return;","","    setError(null);","","    try {","      const formData = new FormData();","      formData.append('image_id', imageId);","","      await axios.post(","        `/api/events/${event.url_name}/delete_image/`,","        formData,","        {","          headers: {","            'Content-Type': 'multipart/form-data',","          },","        }","      );","      ","      setImages(images.filter(img => img.id !== imageId));","      ","      if (selectedImage?.id === imageId) {","        setSelectedImage(null);","      }","      ","      onImagesChange();","    } catch (err) {","      setError(err.response?.data?.detail || 'Failed to delete image');","    }","  };","","  return (","    <div className=\"w-full\">","      {error && (","        <Alert severity=\"error\" className=\"mb-4\">","          {error}","        </Alert>","      )}","","      {isAdmin && (","        <Box className=\"mb-4\">","          <input","            type=\"file\"","            id=\"image-upload\"","            multiple","            accept=\"image/*\"","            className=\"hidden\"","            onChange={handleFileSelect}","          />","          <label htmlFor=\"image-upload\">","            <Button","              variant=\"contained\"","              component=\"span\"","              disabled={uploadingImages}","              startIcon={<Upload className=\"w-4 h-4\" />}","            >","              {uploadingImages ? 'Uploading...' : 'Upload Images'}","            </Button>","          </label>","        </Box>","      )}","","      <ImageList cols={3} gap={8} className=\"!grid-cols-1 sm:!grid-cols-2 md:!grid-cols-3\">","        {images.map((image, index) => (","          <ImageListItem ","            key={image.id} ","            className=\"relative\"","            sx={{","              transition: 'all 0.3s ease-in-out',","            }}","          >","            <Paper ","              elevation={2} ","              className=\"h-full\"","              sx={{","                '&:hover .image-controls': {","                  opacity: 1,","                },","              }}","            >","              <div className=\"relative\">","                <img","                  src={image.image_url}","                  alt={image.caption || 'Event image'}","                  className=\"w-full h-full object-cover aspect-[4/3] cursor-pointer\"","                  onClick={() => handleImageClick(image, index)}","                />","                {isAdmin && (","                  <div className=\"image-controls absolute bottom-0 left-0 right-0 bg-black/50 p-2 opacity-0 transition-opacity duration-200\">","                    <div className=\"flex justify-between items-center\">","                      <div className=\"flex gap-1\">","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'left')}","                          disabled={index === 0}","                          sx={{","                            backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'white',","                            '&:hover': {","                              backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.7)' : '#f5f5f5',","                            },","                            '&.Mui-disabled': {","                              backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.3)' : '#e0e0e0',","                            }","                          }}","                        >","                          <MoveLeft className=\"w-4 h-4\" />","                        </IconButton>","                        <IconButton","                          size=\"small\"","                          onClick={() => handleMoveImage(image.id, 'right')}","                          disabled={index === images.length - 1}","                          sx={{","                            backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'white',","                            '&:hover': {","                              backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.7)' : '#f5f5f5',","                            },","                            '&.Mui-disabled': {","                              backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.3)' : '#e0e0e0',","                            }","                          }}","                        >","                          <MoveRight className=\"w-4 h-4\" />","                        </IconButton>","                      </div>","                      <IconButton","                        size=\"small\"","                        onClick={() => handleDeleteImage(image.id)}","                        sx={{","                          backgroundColor: 'rgb(239, 68, 68)',","                          color: 'white',","                          '&:hover': {","                            backgroundColor: 'rgb(220, 38, 38)',","                          }","                        }}","                      >","                        <Trash2 className=\"w-4 h-4\" />","                      </IconButton>","                    </div>","                  </div>","                )}","              </div>","            </Paper>","          </ImageListItem>","        ))}","      </ImageList>","","      <Dialog","        open={!!selectedImage}","        onClose={handleClose}","        maxWidth=\"md\"","        fullWidth={false}","        PaperProps={{","          sx: {","            m: 0,","            maxWidth: '800px',","            width: '90%',","            bgcolor: 'background.paper',","          }","        }}","      >","        <Box sx={{ position: 'relative' }}>","          <IconButton","            onClick={handleClose}","            sx={{","              position: 'absolute',","              right: 8,","              top: 8,","              zIndex: 1,","              bgcolor: 'background.paper',","              '&:hover': { bgcolor: 'action.hover' }","            }}","          >","            <CloseIcon />","          </IconButton>","          ","          <img","            src={selectedImage?.image_url}","            alt={selectedImage?.caption || 'Event image'}","            style={{","              width: '100%',","              height: 'auto',","              maxHeight: '80vh',","              objectFit: 'contain'","            }}","          />","","          {images.length > 1 && (","            <Box sx={{ ","              position: 'absolute', ","              bottom: 16, ","              left: 0, ","              right: 0, ","              display: 'flex', ","              justifyContent: 'space-between', ","              px: 2 ","            }}>","              <IconButton","                onClick={handlePrevious}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronLeft />","              </IconButton>","              <IconButton","                onClick={handleNext}","                sx={{ bgcolor: 'background.paper', '&:hover': { bgcolor: 'action.hover' } }}","              >","                <ChevronRight />","              </IconButton>","            </Box>","          )}","        </Box>","      </Dialog>","    </div>","  );","};","","export default EventGallery;"]}]]},"ace":{"folds":[],"scrolltop":4399,"scrollleft":0,"selection":{"start":{"row":357,"column":28},"end":{"row":357,"column":28},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":313,"state":["jsx",4],"mode":"ace/mode/javascript"}},"timestamp":1733444924391,"hash":"6e156364b6408494caf04831188899b2ca482098"}